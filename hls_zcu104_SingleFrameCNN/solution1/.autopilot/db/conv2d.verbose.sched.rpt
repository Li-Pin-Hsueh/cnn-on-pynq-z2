

================================================================
== Vivado HLS Report for 'conv2d'
================================================================
* Date:           Thu Sep 24 11:01:56 2020

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        hls_SingleFrameCNN
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.419 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- Loop 1             |        9|       15|   3 ~ 5  |          -|          -|      3|    no    |
        | + Loop 1.1          |        1|        3|         1|          -|          -| 1 ~ 3 |    no    |
        |- Loop 2             |        ?|        ?|         ?|          -|          -|      ?|    no    |
        | + Loop 2.1          |        ?|        ?|         1|          -|          -|      ?|    no    |
        |- Loop 3             |        ?|        ?|         ?|          -|          -|      ?|    no    |
        | + Loop 3.1          |        ?|        ?|        80|          -|          -|      ?|    no    |
        |  ++ Loop 3.1.1      |       78|       78|        26|          -|          -|      3|    no    |
        |   +++ Loop 3.1.1.1  |       24|       24|         8|          -|          -|      3|    no    |
        |- Loop 4             |        ?|        ?|         ?|          -|          -|      ?|    no    |
        | + Loop 4.1          |        ?|        ?|         3|          -|          -|      ?|    no    |
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 3 2 
4 --> 5 6 
5 --> 5 4 
6 --> 7 17 
7 --> 8 6 
8 --> 9 7 
9 --> 10 8 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 9 
17 --> 18 
18 --> 19 17 
19 --> 20 
20 --> 18 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %stream_kernel_V_data), !map !21"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_kernel_V_last), !map !27"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %stream_input_V_data), !map !31"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_input_V_last), !map !35"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %stream_output_V_data), !map !39"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_output_V_last), !map !43"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %input_row), !map !47"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %input_col), !map !53"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @conv2d_str) nounwind"   --->   Operation 29 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.00ns)   --->   "%input_col_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %input_col)"   --->   Operation 30 'read' 'input_col_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 31 [1/1] (1.00ns)   --->   "%input_row_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %input_row)"   --->   Operation 31 'read' 'input_row_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%input = alloca [4096 x float], align 4" [src_code_v3/conv2d.cpp:22]   --->   Operation 32 'alloca' 'input' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%kernel = alloca [9 x float], align 4" [src_code_v3/conv2d.cpp:23]   --->   Operation 33 'alloca' 'kernel' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%output = alloca [3844 x float], align 4" [src_code_v3/conv2d.cpp:24]   --->   Operation 34 'alloca' 'output' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %stream_kernel_V_data, i1* %stream_kernel_V_last, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src_code_v3/conv2d.cpp:8]   --->   Operation 35 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %stream_input_V_data, i1* %stream_input_V_last, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src_code_v3/conv2d.cpp:9]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %stream_output_V_data, i1* %stream_output_V_last, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src_code_v3/conv2d.cpp:10]   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %input_row, [10 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src_code_v3/conv2d.cpp:11]   --->   Operation 38 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %input_col, [10 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src_code_v3/conv2d.cpp:12]   --->   Operation 39 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src_code_v3/conv2d.cpp:14]   --->   Operation 40 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.65ns)   --->   "br label %1" [src_code_v3/conv2d.cpp:28]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.65>

State 2 <SV = 1> <Delay = 0.79>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%row_0 = phi i2 [ 0, %0 ], [ %row_4, %.loopexit5 ]"   --->   Operation 42 'phi' 'row_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.44ns)   --->   "%icmp_ln28 = icmp eq i2 %row_0, -1" [src_code_v3/conv2d.cpp:28]   --->   Operation 43 'icmp' 'icmp_ln28' <Predicate = true> <Delay = 0.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 44 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.54ns)   --->   "%row_4 = add i2 %row_0, 1" [src_code_v3/conv2d.cpp:28]   --->   Operation 45 'add' 'row_4' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "br i1 %icmp_ln28, label %.preheader9.preheader, label %.preheader10.preheader" [src_code_v3/conv2d.cpp:28]   --->   Operation 46 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i2 %row_0 to i5" [src_code_v3/conv2d.cpp:31]   --->   Operation 47 'zext' 'zext_ln31' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %row_0, i2 0)" [src_code_v3/conv2d.cpp:31]   --->   Operation 48 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln31_1 = zext i4 %tmp to i5" [src_code_v3/conv2d.cpp:31]   --->   Operation 49 'zext' 'zext_ln31_1' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.79ns)   --->   "%sub_ln31 = sub i5 %zext_ln31_1, %zext_ln31" [src_code_v3/conv2d.cpp:31]   --->   Operation 50 'sub' 'sub_ln31' <Predicate = (!icmp_ln28)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.65ns)   --->   "br label %.preheader10" [src_code_v3/conv2d.cpp:29]   --->   Operation 51 'br' <Predicate = (!icmp_ln28)> <Delay = 0.65>
ST_2 : Operation 52 [1/1] (0.65ns)   --->   "br label %.preheader9" [src_code_v3/conv2d.cpp:40]   --->   Operation 52 'br' <Predicate = (icmp_ln28)> <Delay = 0.65>

State 3 <SV = 2> <Delay = 1.46>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%col_0 = phi i2 [ 0, %.preheader10.preheader ], [ %col, %2 ]"   --->   Operation 53 'phi' 'col_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.44ns)   --->   "%icmp_ln29 = icmp eq i2 %col_0, -1" [src_code_v3/conv2d.cpp:29]   --->   Operation 54 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 0.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 3, i64 2)"   --->   Operation 55 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.54ns)   --->   "%col = add i2 %col_0, 1" [src_code_v3/conv2d.cpp:29]   --->   Operation 56 'add' 'col' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "br i1 %icmp_ln29, label %.loopexit5, label %2" [src_code_v3/conv2d.cpp:29]   --->   Operation 57 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%empty_4 = call { float, i1 } @_ssdm_op_Read.axis.volatile.floatP.i1P(float* %stream_kernel_V_data, i1* %stream_kernel_V_last)" [src_code_v3/conv2d.cpp:30]   --->   Operation 58 'read' 'empty_4' <Predicate = (!icmp_ln29)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_data_1 = extractvalue { float, i1 } %empty_4, 0" [src_code_v3/conv2d.cpp:30]   --->   Operation 59 'extractvalue' 'tmp_data_1' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_last_1 = extractvalue { float, i1 } %empty_4, 1" [src_code_v3/conv2d.cpp:30]   --->   Operation 60 'extractvalue' 'tmp_last_1' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln31_2 = zext i2 %col_0 to i5" [src_code_v3/conv2d.cpp:31]   --->   Operation 61 'zext' 'zext_ln31_2' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.78ns)   --->   "%add_ln31 = add i5 %sub_ln31, %zext_ln31_2" [src_code_v3/conv2d.cpp:31]   --->   Operation 62 'add' 'add_ln31' <Predicate = (!icmp_ln29)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i5 %add_ln31 to i64" [src_code_v3/conv2d.cpp:31]   --->   Operation 63 'sext' 'sext_ln31' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%kernel_addr = getelementptr [9 x float]* %kernel, i64 0, i64 %sext_ln31" [src_code_v3/conv2d.cpp:31]   --->   Operation 64 'getelementptr' 'kernel_addr' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.67ns)   --->   "store float %tmp_data_1, float* %kernel_addr, align 4" [src_code_v3/conv2d.cpp:31]   --->   Operation 65 'store' <Predicate = (!icmp_ln29)> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %tmp_last_1, label %.loopexit5, label %.preheader10" [src_code_v3/conv2d.cpp:32]   --->   Operation 66 'br' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "br label %1" [src_code_v3/conv2d.cpp:28]   --->   Operation 67 'br' <Predicate = (tmp_last_1) | (icmp_ln29)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 1.01>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%row_1 = phi i31 [ %row_5, %.loopexit ], [ 0, %.preheader9.preheader ]"   --->   Operation 68 'phi' 'row_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln40 = zext i31 %row_1 to i32" [src_code_v3/conv2d.cpp:40]   --->   Operation 69 'zext' 'zext_ln40' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.99ns)   --->   "%icmp_ln40 = icmp slt i32 %zext_ln40, %input_row_read" [src_code_v3/conv2d.cpp:40]   --->   Operation 70 'icmp' 'icmp_ln40' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (1.00ns)   --->   "%row_5 = add i31 %row_1, 1" [src_code_v3/conv2d.cpp:40]   --->   Operation 71 'add' 'row_5' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "br i1 %icmp_ln40, label %.preheader8.preheader, label %4" [src_code_v3/conv2d.cpp:40]   --->   Operation 72 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%trunc_ln41 = trunc i31 %row_1 to i8" [src_code_v3/conv2d.cpp:41]   --->   Operation 73 'trunc' 'trunc_ln41' <Predicate = (icmp_ln40)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln43_cast = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %trunc_ln41, i6 0)" [src_code_v3/conv2d.cpp:41]   --->   Operation 74 'bitconcatenate' 'zext_ln43_cast' <Predicate = (icmp_ln40)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.65ns)   --->   "br label %.preheader8" [src_code_v3/conv2d.cpp:41]   --->   Operation 75 'br' <Predicate = (icmp_ln40)> <Delay = 0.65>
ST_4 : Operation 76 [1/1] (1.01ns)   --->   "%row_boundary = add nsw i32 %input_row_read, -2" [src_code_v3/conv2d.cpp:54]   --->   Operation 76 'add' 'row_boundary' <Predicate = (!icmp_ln40)> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (1.01ns)   --->   "%col_boundary = add nsw i32 %input_col_read, -2" [src_code_v3/conv2d.cpp:55]   --->   Operation 77 'add' 'col_boundary' <Predicate = (!icmp_ln40)> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 78 [1/1] (0.65ns)   --->   "br label %.loopexit10" [src_code_v3/conv2d.cpp:57]   --->   Operation 78 'br' <Predicate = (!icmp_ln40)> <Delay = 0.65>

State 5 <SV = 3> <Delay = 2.06>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%col_1 = phi i31 [ 0, %.preheader8.preheader ], [ %col_4, %3 ]"   --->   Operation 79 'phi' 'col_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln41 = zext i31 %col_1 to i32" [src_code_v3/conv2d.cpp:41]   --->   Operation 80 'zext' 'zext_ln41' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.99ns)   --->   "%icmp_ln41 = icmp slt i32 %zext_ln41, %input_col_read" [src_code_v3/conv2d.cpp:41]   --->   Operation 81 'icmp' 'icmp_ln41' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (1.00ns)   --->   "%col_4 = add i31 %col_1, 1" [src_code_v3/conv2d.cpp:41]   --->   Operation 82 'add' 'col_4' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "br i1 %icmp_ln41, label %3, label %.loopexit" [src_code_v3/conv2d.cpp:41]   --->   Operation 83 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%empty_5 = call { float, i1 } @_ssdm_op_Read.axis.volatile.floatP.i1P(float* %stream_input_V_data, i1* %stream_input_V_last)" [src_code_v3/conv2d.cpp:42]   --->   Operation 84 'read' 'empty_5' <Predicate = (icmp_ln41)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_data_2 = extractvalue { float, i1 } %empty_5, 0" [src_code_v3/conv2d.cpp:42]   --->   Operation 85 'extractvalue' 'tmp_data_2' <Predicate = (icmp_ln41)> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_last_2 = extractvalue { float, i1 } %empty_5, 1" [src_code_v3/conv2d.cpp:42]   --->   Operation 86 'extractvalue' 'tmp_last_2' <Predicate = (icmp_ln41)> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln43 = trunc i31 %col_1 to i14" [src_code_v3/conv2d.cpp:43]   --->   Operation 87 'trunc' 'trunc_ln43' <Predicate = (icmp_ln41)> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.83ns)   --->   "%add_ln43 = add i14 %zext_ln43_cast, %trunc_ln43" [src_code_v3/conv2d.cpp:43]   --->   Operation 88 'add' 'add_ln43' <Predicate = (icmp_ln41)> <Delay = 0.83> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln43 = zext i14 %add_ln43 to i64" [src_code_v3/conv2d.cpp:43]   --->   Operation 89 'zext' 'zext_ln43' <Predicate = (icmp_ln41)> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [4096 x float]* %input, i64 0, i64 %zext_ln43" [src_code_v3/conv2d.cpp:43]   --->   Operation 90 'getelementptr' 'input_addr' <Predicate = (icmp_ln41)> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (1.23ns)   --->   "store float %tmp_data_2, float* %input_addr, align 4" [src_code_v3/conv2d.cpp:43]   --->   Operation 91 'store' <Predicate = (icmp_ln41)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "br i1 %tmp_last_2, label %.loopexit, label %.preheader8" [src_code_v3/conv2d.cpp:44]   --->   Operation 92 'br' <Predicate = (icmp_ln41)> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "br label %.preheader9" [src_code_v3/conv2d.cpp:40]   --->   Operation 93 'br' <Predicate = (tmp_last_2) | (!icmp_ln41)> <Delay = 0.00>

State 6 <SV = 3> <Delay = 1.01>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%row_2 = phi i31 [ 0, %4 ], [ %row, %.loopexit10.loopexit ]"   --->   Operation 94 'phi' 'row_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i31 %row_2 to i32" [src_code_v3/conv2d.cpp:57]   --->   Operation 95 'zext' 'zext_ln57' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.99ns)   --->   "%icmp_ln57 = icmp slt i32 %zext_ln57, %row_boundary" [src_code_v3/conv2d.cpp:57]   --->   Operation 96 'icmp' 'icmp_ln57' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 97 [1/1] (1.00ns)   --->   "%row = add i31 %row_2, 1" [src_code_v3/conv2d.cpp:57]   --->   Operation 97 'add' 'row' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "br i1 %icmp_ln57, label %.preheader7.preheader, label %7" [src_code_v3/conv2d.cpp:57]   --->   Operation 98 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%trunc_ln60 = trunc i31 %row_2 to i7" [src_code_v3/conv2d.cpp:60]   --->   Operation 99 'trunc' 'trunc_ln60' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln60_cast = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %trunc_ln60, i6 0)" [src_code_v3/conv2d.cpp:60]   --->   Operation 100 'bitconcatenate' 'zext_ln60_cast' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%trunc_ln60_1 = trunc i31 %row_2 to i12" [src_code_v3/conv2d.cpp:60]   --->   Operation 101 'trunc' 'trunc_ln60_1' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln60_2_cast = call i13 @_ssdm_op_BitConcatenate.i13.i12.i1(i12 %trunc_ln60_1, i1 false)" [src_code_v3/conv2d.cpp:60]   --->   Operation 102 'bitconcatenate' 'zext_ln60_2_cast' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (0.82ns)   --->   "%sub_ln60 = sub i13 %zext_ln60_cast, %zext_ln60_2_cast" [src_code_v3/conv2d.cpp:60]   --->   Operation 103 'sub' 'sub_ln60' <Predicate = (icmp_ln57)> <Delay = 0.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 104 [1/1] (0.65ns)   --->   "br label %.preheader7" [src_code_v3/conv2d.cpp:58]   --->   Operation 104 'br' <Predicate = (icmp_ln57)> <Delay = 0.65>
ST_6 : Operation 105 [1/1] (1.01ns)   --->   "%add_ln79 = add nsw i32 %input_row_read, -3" [src_code_v3/conv2d.cpp:79]   --->   Operation 105 'add' 'add_ln79' <Predicate = (!icmp_ln57)> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 106 [1/1] (1.01ns)   --->   "%add_ln79_1 = add nsw i32 %input_col_read, -3" [src_code_v3/conv2d.cpp:79]   --->   Operation 106 'add' 'add_ln79_1' <Predicate = (!icmp_ln57)> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 107 [1/1] (0.65ns)   --->   "br label %.loopexit8" [src_code_v3/conv2d.cpp:76]   --->   Operation 107 'br' <Predicate = (!icmp_ln57)> <Delay = 0.65>

State 7 <SV = 4> <Delay = 2.05>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%col_2 = phi i31 [ 0, %.preheader7.preheader ], [ %col_5, %.preheader7.loopexit ]"   --->   Operation 108 'phi' 'col_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i31 %col_2 to i32" [src_code_v3/conv2d.cpp:58]   --->   Operation 109 'zext' 'zext_ln58' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (0.99ns)   --->   "%icmp_ln58 = icmp slt i32 %zext_ln58, %col_boundary" [src_code_v3/conv2d.cpp:58]   --->   Operation 110 'icmp' 'icmp_ln58' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 111 [1/1] (1.00ns)   --->   "%col_5 = add i31 %col_2, 1" [src_code_v3/conv2d.cpp:58]   --->   Operation 111 'add' 'col_5' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 112 [1/1] (0.00ns)   --->   "br i1 %icmp_ln58, label %5, label %.loopexit10.loopexit" [src_code_v3/conv2d.cpp:58]   --->   Operation 112 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "%trunc_ln60_2 = trunc i31 %col_2 to i13" [src_code_v3/conv2d.cpp:60]   --->   Operation 113 'trunc' 'trunc_ln60_2' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 114 [1/1] (0.82ns)   --->   "%add_ln60 = add i13 %sub_ln60, %trunc_ln60_2" [src_code_v3/conv2d.cpp:60]   --->   Operation 114 'add' 'add_ln60' <Predicate = (icmp_ln58)> <Delay = 0.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 115 [1/1] (0.00ns)   --->   "%sext_ln60 = sext i13 %add_ln60 to i64" [src_code_v3/conv2d.cpp:60]   --->   Operation 115 'sext' 'sext_ln60' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 116 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [3844 x float]* %output, i64 0, i64 %sext_ln60" [src_code_v3/conv2d.cpp:60]   --->   Operation 116 'getelementptr' 'output_addr' <Predicate = (icmp_ln58)> <Delay = 0.00>
ST_7 : Operation 117 [1/1] (1.23ns)   --->   "store float 0.000000e+00, float* %output_addr, align 4" [src_code_v3/conv2d.cpp:60]   --->   Operation 117 'store' <Predicate = (icmp_ln58)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_7 : Operation 118 [1/1] (0.65ns)   --->   "br label %.loopexit9" [src_code_v3/conv2d.cpp:63]   --->   Operation 118 'br' <Predicate = (icmp_ln58)> <Delay = 0.65>
ST_7 : Operation 119 [1/1] (0.00ns)   --->   "br label %.loopexit10"   --->   Operation 119 'br' <Predicate = (!icmp_ln58)> <Delay = 0.00>

State 8 <SV = 5> <Delay = 0.79>
ST_8 : Operation 120 [1/1] (0.00ns)   --->   "%empty_6 = phi float [ 0.000000e+00, %5 ], [ %empty_8, %.loopexit9.loopexit ]" [src_code_v3/conv2d.cpp:66]   --->   Operation 120 'phi' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%m_0 = phi i2 [ 0, %5 ], [ %m, %.loopexit9.loopexit ]"   --->   Operation 121 'phi' 'm_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (0.44ns)   --->   "%icmp_ln63 = icmp eq i2 %m_0, -1" [src_code_v3/conv2d.cpp:63]   --->   Operation 122 'icmp' 'icmp_ln63' <Predicate = true> <Delay = 0.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 123 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.54ns)   --->   "%m = add i2 %m_0, 1" [src_code_v3/conv2d.cpp:63]   --->   Operation 124 'add' 'm' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 125 [1/1] (0.00ns)   --->   "br i1 %icmp_ln63, label %.preheader7.loopexit, label %.preheader6.preheader" [src_code_v3/conv2d.cpp:63]   --->   Operation 125 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i2 %m_0 to i8" [src_code_v3/conv2d.cpp:65]   --->   Operation 126 'zext' 'zext_ln65' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_8 : Operation 127 [1/1] (0.00ns)   --->   "%trunc_ln65 = trunc i31 %row_2 to i8" [src_code_v3/conv2d.cpp:65]   --->   Operation 127 'trunc' 'trunc_ln65' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_8 : Operation 128 [1/1] (0.76ns)   --->   "%add_ln65 = add i8 %trunc_ln65, %zext_ln65" [src_code_v3/conv2d.cpp:65]   --->   Operation 128 'add' 'add_ln65' <Predicate = (!icmp_ln63)> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 129 [1/1] (0.00ns)   --->   "%sext_ln65_cast = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %add_ln65, i6 0)" [src_code_v3/conv2d.cpp:65]   --->   Operation 129 'bitconcatenate' 'sext_ln65_cast' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_8 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln65_1 = zext i2 %m_0 to i5" [src_code_v3/conv2d.cpp:65]   --->   Operation 130 'zext' 'zext_ln65_1' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_8 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_8 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %m_0, i2 0)" [src_code_v3/conv2d.cpp:65]   --->   Operation 131 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_8 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln65_2 = zext i4 %tmp_8 to i5" [src_code_v3/conv2d.cpp:65]   --->   Operation 132 'zext' 'zext_ln65_2' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_8 : Operation 133 [1/1] (0.79ns)   --->   "%sub_ln65 = sub i5 %zext_ln65_2, %zext_ln65_1" [src_code_v3/conv2d.cpp:65]   --->   Operation 133 'sub' 'sub_ln65' <Predicate = (!icmp_ln63)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 134 [1/1] (0.65ns)   --->   "br label %.preheader6" [src_code_v3/conv2d.cpp:64]   --->   Operation 134 'br' <Predicate = (!icmp_ln63)> <Delay = 0.65>
ST_8 : Operation 135 [1/1] (0.00ns)   --->   "br label %.preheader7"   --->   Operation 135 'br' <Predicate = (icmp_ln63)> <Delay = 0.00>

State 9 <SV = 6> <Delay = 2.01>
ST_9 : Operation 136 [1/1] (0.00ns)   --->   "%empty_8 = phi float [ %tmp_4, %6 ], [ %empty_6, %.preheader6.preheader ]" [src_code_v3/conv2d.cpp:66]   --->   Operation 136 'phi' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 137 [1/1] (0.00ns)   --->   "%n_0 = phi i2 [ %n, %6 ], [ 0, %.preheader6.preheader ]"   --->   Operation 137 'phi' 'n_0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 138 [1/1] (0.44ns)   --->   "%icmp_ln64 = icmp eq i2 %n_0, -1" [src_code_v3/conv2d.cpp:64]   --->   Operation 138 'icmp' 'icmp_ln64' <Predicate = true> <Delay = 0.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 139 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 139 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 140 [1/1] (0.54ns)   --->   "%n = add i2 %n_0, 1" [src_code_v3/conv2d.cpp:64]   --->   Operation 140 'add' 'n' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 141 [1/1] (0.00ns)   --->   "br i1 %icmp_ln64, label %.loopexit9.loopexit, label %6" [src_code_v3/conv2d.cpp:64]   --->   Operation 141 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln65_3 = zext i2 %n_0 to i14" [src_code_v3/conv2d.cpp:65]   --->   Operation 142 'zext' 'zext_ln65_3' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_9 : Operation 143 [1/1] (0.00ns)   --->   "%trunc_ln65_1 = trunc i31 %col_2 to i14" [src_code_v3/conv2d.cpp:65]   --->   Operation 143 'trunc' 'trunc_ln65_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_9 : Operation 144 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_1 = add i14 %trunc_ln65_1, %zext_ln65_3" [src_code_v3/conv2d.cpp:65]   --->   Operation 144 'add' 'add_ln65_1' <Predicate = (!icmp_ln64)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 145 [1/1] (0.77ns) (root node of TernaryAdder)   --->   "%add_ln65_2 = add i14 %add_ln65_1, %sext_ln65_cast" [src_code_v3/conv2d.cpp:65]   --->   Operation 145 'add' 'add_ln65_2' <Predicate = (!icmp_ln64)> <Delay = 0.77> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 146 [1/1] (0.00ns)   --->   "%sext_ln65 = sext i14 %add_ln65_2 to i64" [src_code_v3/conv2d.cpp:65]   --->   Operation 146 'sext' 'sext_ln65' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_9 : Operation 147 [1/1] (0.00ns)   --->   "%input_addr_1 = getelementptr [4096 x float]* %input, i64 0, i64 %sext_ln65" [src_code_v3/conv2d.cpp:65]   --->   Operation 147 'getelementptr' 'input_addr_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_9 : Operation 148 [2/2] (1.23ns)   --->   "%input_load = load float* %input_addr_1, align 4" [src_code_v3/conv2d.cpp:65]   --->   Operation 148 'load' 'input_load' <Predicate = (!icmp_ln64)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_9 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln65_4 = zext i2 %n_0 to i5" [src_code_v3/conv2d.cpp:65]   --->   Operation 149 'zext' 'zext_ln65_4' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_9 : Operation 150 [1/1] (0.78ns)   --->   "%add_ln65_3 = add i5 %zext_ln65_4, %sub_ln65" [src_code_v3/conv2d.cpp:65]   --->   Operation 150 'add' 'add_ln65_3' <Predicate = (!icmp_ln64)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 151 [1/1] (0.00ns)   --->   "%sext_ln65_1 = sext i5 %add_ln65_3 to i64" [src_code_v3/conv2d.cpp:65]   --->   Operation 151 'sext' 'sext_ln65_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_9 : Operation 152 [1/1] (0.00ns)   --->   "%kernel_addr_1 = getelementptr [9 x float]* %kernel, i64 0, i64 %sext_ln65_1" [src_code_v3/conv2d.cpp:65]   --->   Operation 152 'getelementptr' 'kernel_addr_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_9 : Operation 153 [2/2] (0.67ns)   --->   "%kernel_load = load float* %kernel_addr_1, align 4" [src_code_v3/conv2d.cpp:65]   --->   Operation 153 'load' 'kernel_load' <Predicate = (!icmp_ln64)> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_9 : Operation 154 [1/1] (0.00ns)   --->   "br label %.loopexit9"   --->   Operation 154 'br' <Predicate = (icmp_ln64)> <Delay = 0.00>

State 10 <SV = 7> <Delay = 1.23>
ST_10 : Operation 155 [1/2] (1.23ns)   --->   "%input_load = load float* %input_addr_1, align 4" [src_code_v3/conv2d.cpp:65]   --->   Operation 155 'load' 'input_load' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_10 : Operation 156 [1/2] (0.67ns)   --->   "%kernel_load = load float* %kernel_addr_1, align 4" [src_code_v3/conv2d.cpp:65]   --->   Operation 156 'load' 'kernel_load' <Predicate = true> <Delay = 0.67> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>

State 11 <SV = 8> <Delay = 8.41>
ST_11 : Operation 157 [2/2] (8.41ns)   --->   "%x = fmul float %input_load, %kernel_load" [src_code_v3/conv2d.cpp:65]   --->   Operation 157 'fmul' 'x' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 9> <Delay = 8.41>
ST_12 : Operation 158 [1/2] (8.41ns)   --->   "%x = fmul float %input_load, %kernel_load" [src_code_v3/conv2d.cpp:65]   --->   Operation 158 'fmul' 'x' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 10> <Delay = 6.43>
ST_13 : Operation 159 [4/4] (6.43ns)   --->   "%tmp_4 = fadd float %empty_8, %x" [src_code_v3/conv2d.cpp:66]   --->   Operation 159 'fadd' 'tmp_4' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 11> <Delay = 6.43>
ST_14 : Operation 160 [3/4] (6.43ns)   --->   "%tmp_4 = fadd float %empty_8, %x" [src_code_v3/conv2d.cpp:66]   --->   Operation 160 'fadd' 'tmp_4' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 12> <Delay = 6.43>
ST_15 : Operation 161 [2/4] (6.43ns)   --->   "%tmp_4 = fadd float %empty_8, %x" [src_code_v3/conv2d.cpp:66]   --->   Operation 161 'fadd' 'tmp_4' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 13> <Delay = 7.67>
ST_16 : Operation 162 [1/4] (6.43ns)   --->   "%tmp_4 = fadd float %empty_8, %x" [src_code_v3/conv2d.cpp:66]   --->   Operation 162 'fadd' 'tmp_4' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 163 [1/1] (1.23ns)   --->   "store float %tmp_4, float* %output_addr, align 4" [src_code_v3/conv2d.cpp:66]   --->   Operation 163 'store' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_16 : Operation 164 [1/1] (0.00ns)   --->   "br label %.preheader6" [src_code_v3/conv2d.cpp:64]   --->   Operation 164 'br' <Predicate = true> <Delay = 0.00>

State 17 <SV = 4> <Delay = 1.00>
ST_17 : Operation 165 [1/1] (0.00ns)   --->   "%row_3 = phi i31 [ 0, %7 ], [ %row_6, %.loopexit8.loopexit ]"   --->   Operation 165 'phi' 'row_3' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i31 %row_3 to i32" [src_code_v3/conv2d.cpp:76]   --->   Operation 166 'zext' 'zext_ln76' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 167 [1/1] (0.99ns)   --->   "%icmp_ln76 = icmp slt i32 %zext_ln76, %row_boundary" [src_code_v3/conv2d.cpp:76]   --->   Operation 167 'icmp' 'icmp_ln76' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 168 [1/1] (1.00ns)   --->   "%row_6 = add i31 %row_3, 1" [src_code_v3/conv2d.cpp:76]   --->   Operation 168 'add' 'row_6' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 169 [1/1] (0.00ns)   --->   "br i1 %icmp_ln76, label %.preheader.preheader, label %9" [src_code_v3/conv2d.cpp:76]   --->   Operation 169 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 170 [1/1] (0.99ns)   --->   "%icmp_ln79 = icmp eq i32 %zext_ln76, %add_ln79" [src_code_v3/conv2d.cpp:79]   --->   Operation 170 'icmp' 'icmp_ln79' <Predicate = (icmp_ln76)> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 171 [1/1] (0.00ns)   --->   "%trunc_ln84 = trunc i31 %row_3 to i7" [src_code_v3/conv2d.cpp:84]   --->   Operation 171 'trunc' 'trunc_ln84' <Predicate = (icmp_ln76)> <Delay = 0.00>
ST_17 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln84_cast = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %trunc_ln84, i6 0)" [src_code_v3/conv2d.cpp:84]   --->   Operation 172 'bitconcatenate' 'zext_ln84_cast' <Predicate = (icmp_ln76)> <Delay = 0.00>
ST_17 : Operation 173 [1/1] (0.00ns)   --->   "%trunc_ln84_1 = trunc i31 %row_3 to i12" [src_code_v3/conv2d.cpp:84]   --->   Operation 173 'trunc' 'trunc_ln84_1' <Predicate = (icmp_ln76)> <Delay = 0.00>
ST_17 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln84_2_cast = call i13 @_ssdm_op_BitConcatenate.i13.i12.i1(i12 %trunc_ln84_1, i1 false)" [src_code_v3/conv2d.cpp:84]   --->   Operation 174 'bitconcatenate' 'zext_ln84_2_cast' <Predicate = (icmp_ln76)> <Delay = 0.00>
ST_17 : Operation 175 [1/1] (0.82ns)   --->   "%sub_ln84 = sub i13 %zext_ln84_cast, %zext_ln84_2_cast" [src_code_v3/conv2d.cpp:84]   --->   Operation 175 'sub' 'sub_ln84' <Predicate = (icmp_ln76)> <Delay = 0.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 176 [1/1] (0.65ns)   --->   "br label %.preheader" [src_code_v3/conv2d.cpp:77]   --->   Operation 176 'br' <Predicate = (icmp_ln76)> <Delay = 0.65>
ST_17 : Operation 177 [1/1] (0.00ns)   --->   "ret void" [src_code_v3/conv2d.cpp:88]   --->   Operation 177 'ret' <Predicate = (!icmp_ln76)> <Delay = 0.00>

State 18 <SV = 5> <Delay = 2.05>
ST_18 : Operation 178 [1/1] (0.00ns)   --->   "%col_3 = phi i31 [ %col_6, %8 ], [ 0, %.preheader.preheader ]"   --->   Operation 178 'phi' 'col_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i31 %col_3 to i32" [src_code_v3/conv2d.cpp:77]   --->   Operation 179 'zext' 'zext_ln77' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 180 [1/1] (0.99ns)   --->   "%icmp_ln77 = icmp slt i32 %zext_ln77, %col_boundary" [src_code_v3/conv2d.cpp:77]   --->   Operation 180 'icmp' 'icmp_ln77' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 181 [1/1] (1.00ns)   --->   "%col_6 = add i31 %col_3, 1" [src_code_v3/conv2d.cpp:77]   --->   Operation 181 'add' 'col_6' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 182 [1/1] (0.00ns)   --->   "br i1 %icmp_ln77, label %8, label %.loopexit8.loopexit" [src_code_v3/conv2d.cpp:77]   --->   Operation 182 'br' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 183 [1/1] (0.99ns)   --->   "%icmp_ln79_1 = icmp eq i32 %zext_ln77, %add_ln79_1" [src_code_v3/conv2d.cpp:79]   --->   Operation 183 'icmp' 'icmp_ln79_1' <Predicate = (icmp_ln77)> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 184 [1/1] (0.28ns)   --->   "%tmp_last = and i1 %icmp_ln79, %icmp_ln79_1" [src_code_v3/conv2d.cpp:79]   --->   Operation 184 'and' 'tmp_last' <Predicate = (icmp_ln77)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 185 [1/1] (0.00ns)   --->   "%trunc_ln84_2 = trunc i31 %col_3 to i13" [src_code_v3/conv2d.cpp:84]   --->   Operation 185 'trunc' 'trunc_ln84_2' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_18 : Operation 186 [1/1] (0.82ns)   --->   "%add_ln84 = add i13 %sub_ln84, %trunc_ln84_2" [src_code_v3/conv2d.cpp:84]   --->   Operation 186 'add' 'add_ln84' <Predicate = (icmp_ln77)> <Delay = 0.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 187 [1/1] (0.00ns)   --->   "%sext_ln84 = sext i13 %add_ln84 to i64" [src_code_v3/conv2d.cpp:84]   --->   Operation 187 'sext' 'sext_ln84' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_18 : Operation 188 [1/1] (0.00ns)   --->   "%output_addr_1 = getelementptr [3844 x float]* %output, i64 0, i64 %sext_ln84" [src_code_v3/conv2d.cpp:84]   --->   Operation 188 'getelementptr' 'output_addr_1' <Predicate = (icmp_ln77)> <Delay = 0.00>
ST_18 : Operation 189 [2/2] (1.23ns)   --->   "%axi_tmp_data = load float* %output_addr_1, align 4" [src_code_v3/conv2d.cpp:84]   --->   Operation 189 'load' 'axi_tmp_data' <Predicate = (icmp_ln77)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_18 : Operation 190 [1/1] (0.00ns)   --->   "br label %.loopexit8"   --->   Operation 190 'br' <Predicate = (!icmp_ln77)> <Delay = 0.00>

State 19 <SV = 6> <Delay = 1.23>
ST_19 : Operation 191 [1/2] (1.23ns)   --->   "%axi_tmp_data = load float* %output_addr_1, align 4" [src_code_v3/conv2d.cpp:84]   --->   Operation 191 'load' 'axi_tmp_data' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 3844> <RAM>
ST_19 : Operation 192 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %stream_output_V_data, i1* %stream_output_V_last, float %axi_tmp_data, i1 %tmp_last)" [src_code_v3/conv2d.cpp:85]   --->   Operation 192 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 20 <SV = 7> <Delay = 0.00>
ST_20 : Operation 193 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %stream_output_V_data, i1* %stream_output_V_last, float %axi_tmp_data, i1 %tmp_last)" [src_code_v3/conv2d.cpp:85]   --->   Operation 193 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_20 : Operation 194 [1/1] (0.00ns)   --->   "br label %.preheader" [src_code_v3/conv2d.cpp:77]   --->   Operation 194 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'input_col' [18]  (1 ns)

 <State 2>: 0.797ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', src_code_v3/conv2d.cpp:28) [31]  (0 ns)
	'sub' operation ('sub_ln31', src_code_v3/conv2d.cpp:31) [40]  (0.797 ns)

 <State 3>: 1.47ns
The critical path consists of the following:
	'phi' operation ('col') with incoming values : ('col', src_code_v3/conv2d.cpp:29) [43]  (0 ns)
	'add' operation ('add_ln31', src_code_v3/conv2d.cpp:31) [53]  (0.789 ns)
	'getelementptr' operation ('kernel_addr', src_code_v3/conv2d.cpp:31) [55]  (0 ns)
	'store' operation ('store_ln31', src_code_v3/conv2d.cpp:31) of variable 'tmp.data', src_code_v3/conv2d.cpp:30 on array 'kernel', src_code_v3/conv2d.cpp:23 [56]  (0.677 ns)

 <State 4>: 1.02ns
The critical path consists of the following:
	'add' operation ('row_boundary', src_code_v3/conv2d.cpp:54) [91]  (1.02 ns)

 <State 5>: 2.07ns
The critical path consists of the following:
	'phi' operation ('col') with incoming values : ('col', src_code_v3/conv2d.cpp:41) [73]  (0 ns)
	'add' operation ('add_ln43', src_code_v3/conv2d.cpp:43) [83]  (0.831 ns)
	'getelementptr' operation ('input_addr', src_code_v3/conv2d.cpp:43) [85]  (0 ns)
	'store' operation ('store_ln43', src_code_v3/conv2d.cpp:43) of variable 'tmp.data', src_code_v3/conv2d.cpp:42 on array 'input', src_code_v3/conv2d.cpp:22 [86]  (1.24 ns)

 <State 6>: 1.02ns
The critical path consists of the following:
	'add' operation ('add_ln79', src_code_v3/conv2d.cpp:79) [168]  (1.02 ns)

 <State 7>: 2.06ns
The critical path consists of the following:
	'phi' operation ('col') with incoming values : ('col', src_code_v3/conv2d.cpp:58) [108]  (0 ns)
	'add' operation ('add_ln60', src_code_v3/conv2d.cpp:60) [115]  (0.82 ns)
	'getelementptr' operation ('output_addr', src_code_v3/conv2d.cpp:60) [117]  (0 ns)
	'store' operation ('store_ln60', src_code_v3/conv2d.cpp:60) of constant 0 on array 'output', src_code_v3/conv2d.cpp:24 [118]  (1.24 ns)

 <State 8>: 0.797ns
The critical path consists of the following:
	'phi' operation ('m') with incoming values : ('m', src_code_v3/conv2d.cpp:63) [122]  (0 ns)
	'sub' operation ('sub_ln65', src_code_v3/conv2d.cpp:65) [135]  (0.797 ns)

 <State 9>: 2.02ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', src_code_v3/conv2d.cpp:64) [139]  (0 ns)
	'add' operation ('add_ln65_1', src_code_v3/conv2d.cpp:65) [147]  (0 ns)
	'add' operation ('add_ln65_2', src_code_v3/conv2d.cpp:65) [148]  (0.778 ns)
	'getelementptr' operation ('input_addr_1', src_code_v3/conv2d.cpp:65) [150]  (0 ns)
	'load' operation ('input_load', src_code_v3/conv2d.cpp:65) on array 'input', src_code_v3/conv2d.cpp:22 [151]  (1.24 ns)

 <State 10>: 1.24ns
The critical path consists of the following:
	'load' operation ('input_load', src_code_v3/conv2d.cpp:65) on array 'input', src_code_v3/conv2d.cpp:22 [151]  (1.24 ns)

 <State 11>: 8.42ns
The critical path consists of the following:
	'fmul' operation ('x', src_code_v3/conv2d.cpp:65) [157]  (8.42 ns)

 <State 12>: 8.42ns
The critical path consists of the following:
	'fmul' operation ('x', src_code_v3/conv2d.cpp:65) [157]  (8.42 ns)

 <State 13>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('tmp_4', src_code_v3/conv2d.cpp:66) [158]  (6.44 ns)

 <State 14>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('tmp_4', src_code_v3/conv2d.cpp:66) [158]  (6.44 ns)

 <State 15>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('tmp_4', src_code_v3/conv2d.cpp:66) [158]  (6.44 ns)

 <State 16>: 7.67ns
The critical path consists of the following:
	'fadd' operation ('tmp_4', src_code_v3/conv2d.cpp:66) [158]  (6.44 ns)
	'store' operation ('store_ln66', src_code_v3/conv2d.cpp:66) of variable 'tmp_4', src_code_v3/conv2d.cpp:66 on array 'output', src_code_v3/conv2d.cpp:24 [159]  (1.24 ns)

 <State 17>: 1.01ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', src_code_v3/conv2d.cpp:76) [172]  (0 ns)
	'add' operation ('row', src_code_v3/conv2d.cpp:76) [175]  (1.01 ns)

 <State 18>: 2.06ns
The critical path consists of the following:
	'phi' operation ('col') with incoming values : ('col', src_code_v3/conv2d.cpp:77) [186]  (0 ns)
	'add' operation ('add_ln84', src_code_v3/conv2d.cpp:84) [195]  (0.82 ns)
	'getelementptr' operation ('output_addr_1', src_code_v3/conv2d.cpp:84) [197]  (0 ns)
	'load' operation ('axi_tmp.data', src_code_v3/conv2d.cpp:84) on array 'output', src_code_v3/conv2d.cpp:24 [198]  (1.24 ns)

 <State 19>: 1.24ns
The critical path consists of the following:
	'load' operation ('axi_tmp.data', src_code_v3/conv2d.cpp:84) on array 'output', src_code_v3/conv2d.cpp:24 [198]  (1.24 ns)

 <State 20>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
