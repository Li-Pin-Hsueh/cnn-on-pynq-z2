// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv2d,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=33,HLS_SYN_DSP=5,HLS_SYN_FF=1575,HLS_SYN_LUT=2581,HLS_VERSION=2020_1}" *)

module conv2d (
        ap_clk,
        ap_rst_n,
        stream_filter_TDATA,
        stream_filter_TVALID,
        stream_filter_TREADY,
        stream_filter_TLAST,
        stream_input_TDATA,
        stream_input_TVALID,
        stream_input_TREADY,
        stream_input_TLAST,
        stream_output_TDATA,
        stream_output_TVALID,
        stream_output_TREADY,
        stream_output_TLAST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_state3 = 31'd4;
parameter    ap_ST_fsm_state4 = 31'd8;
parameter    ap_ST_fsm_state5 = 31'd16;
parameter    ap_ST_fsm_state6 = 31'd32;
parameter    ap_ST_fsm_state7 = 31'd64;
parameter    ap_ST_fsm_state8 = 31'd128;
parameter    ap_ST_fsm_state9 = 31'd256;
parameter    ap_ST_fsm_state10 = 31'd512;
parameter    ap_ST_fsm_state11 = 31'd1024;
parameter    ap_ST_fsm_state12 = 31'd2048;
parameter    ap_ST_fsm_state13 = 31'd4096;
parameter    ap_ST_fsm_state14 = 31'd8192;
parameter    ap_ST_fsm_state15 = 31'd16384;
parameter    ap_ST_fsm_state16 = 31'd32768;
parameter    ap_ST_fsm_state17 = 31'd65536;
parameter    ap_ST_fsm_state18 = 31'd131072;
parameter    ap_ST_fsm_state19 = 31'd262144;
parameter    ap_ST_fsm_state20 = 31'd524288;
parameter    ap_ST_fsm_state21 = 31'd1048576;
parameter    ap_ST_fsm_state22 = 31'd2097152;
parameter    ap_ST_fsm_state23 = 31'd4194304;
parameter    ap_ST_fsm_state24 = 31'd8388608;
parameter    ap_ST_fsm_state25 = 31'd16777216;
parameter    ap_ST_fsm_state26 = 31'd33554432;
parameter    ap_ST_fsm_state27 = 31'd67108864;
parameter    ap_ST_fsm_state28 = 31'd134217728;
parameter    ap_ST_fsm_state29 = 31'd268435456;
parameter    ap_ST_fsm_state30 = 31'd536870912;
parameter    ap_ST_fsm_state31 = 31'd1073741824;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] stream_filter_TDATA;
input   stream_filter_TVALID;
output   stream_filter_TREADY;
input   stream_filter_TLAST;
input  [31:0] stream_input_TDATA;
input   stream_input_TVALID;
output   stream_input_TREADY;
input   stream_input_TLAST;
output  [31:0] stream_output_TDATA;
output   stream_output_TVALID;
input   stream_output_TREADY;
output   stream_output_TLAST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg stream_filter_TREADY;
reg stream_input_TREADY;

 reg    ap_rst_n_inv;
wire   [31:0] input_size;
wire   [31:0] input_number;
wire   [31:0] filter_number;
reg    stream_filter_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln30_fu_553_p2;
wire   [0:0] tmp_nbreadreq_fu_118_p4;
reg    stream_input_TDATA_blk_n;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln42_fu_669_p2;
wire   [0:0] tmp_1_nbreadreq_fu_136_p4;
reg    stream_output_TDATA_blk_n;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln63_fu_790_p2;
wire    ap_CS_fsm_state31;
reg   [31:0] filter_number_read_reg_975;
wire    ap_CS_fsm_state1;
reg   [31:0] input_number_read_reg_981;
reg   [31:0] input_size_read_reg_987;
wire   [30:0] count_fu_430_p2;
reg   [30:0] count_reg_997;
wire    ap_CS_fsm_state2;
wire  signed [34:0] sext_ln32_fu_458_p1;
reg  signed [34:0] sext_ln32_reg_1002;
wire   [0:0] icmp_ln27_fu_425_p2;
wire   [1:0] channel_fu_473_p2;
reg   [1:0] channel_reg_1017;
wire    ap_CS_fsm_state3;
wire   [63:0] sub_ln32_1_fu_504_p2;
reg   [63:0] sub_ln32_1_reg_1022;
wire   [0:0] icmp_ln28_fu_467_p2;
wire   [1:0] row_fu_516_p2;
reg   [1:0] row_reg_1030;
wire    ap_CS_fsm_state4;
wire   [7:0] sub_ln32_2_fu_547_p2;
reg   [7:0] sub_ln32_2_reg_1035;
wire   [0:0] icmp_ln29_fu_510_p2;
wire   [1:0] col_fu_559_p2;
reg    ap_predicate_op104_read_state5;
reg    ap_block_state5;
wire   [30:0] count_2_fu_602_p2;
reg   [30:0] count_2_reg_1054;
wire    ap_CS_fsm_state6;
wire   [31:0] map_boundary_fu_608_p2;
reg   [31:0] map_boundary_reg_1059;
wire   [0:0] icmp_ln39_fu_597_p2;
wire   [1:0] channel_3_fu_619_p2;
reg   [1:0] channel_3_reg_1068;
wire    ap_CS_fsm_state7;
wire   [7:0] tmp_5_fu_625_p3;
reg   [7:0] tmp_5_reg_1073;
wire   [0:0] icmp_ln40_fu_613_p2;
wire   [30:0] row_4_fu_642_p2;
reg   [30:0] row_4_reg_1081;
wire    ap_CS_fsm_state8;
wire   [14:0] tmp_8_cast_fu_661_p3;
reg   [14:0] tmp_8_cast_reg_1086;
wire   [0:0] icmp_ln41_fu_637_p2;
wire   [31:0] col_3_fu_674_p2;
reg    ap_predicate_op148_read_state9;
reg    ap_block_state9;
wire   [30:0] input_count_fu_717_p2;
reg   [30:0] input_count_reg_1105;
wire    ap_CS_fsm_state10;
wire    regslice_both_stream_output_V_data_U_apdone_blk;
wire   [30:0] filter_count_fu_732_p2;
reg   [30:0] filter_count_reg_1113;
wire    ap_CS_fsm_state11;
wire  signed [34:0] sext_ln67_fu_760_p1;
reg  signed [34:0] sext_ln67_reg_1118;
wire   [0:0] icmp_ln57_fu_727_p2;
wire   [30:0] row_3_fu_773_p2;
reg   [30:0] row_3_reg_1126;
wire    ap_CS_fsm_state12;
wire   [31:0] col_4_fu_784_p2;
reg   [31:0] col_4_reg_1134;
wire    ap_CS_fsm_state13;
wire   [1:0] channel_4_fu_796_p2;
reg   [1:0] channel_4_reg_1142;
reg    ap_block_state14_io;
wire   [8:0] zext_ln67_4_fu_814_p1;
reg   [8:0] zext_ln67_4_reg_1147;
wire   [63:0] sub_ln67_1_fu_839_p2;
reg   [63:0] sub_ln67_1_reg_1152;
wire   [1:0] m_fu_855_p2;
reg   [1:0] m_reg_1165;
wire    ap_CS_fsm_state15;
wire   [14:0] tmp_13_cast_fu_880_p3;
reg   [14:0] tmp_13_cast_reg_1170;
wire   [0:0] icmp_ln65_fu_849_p2;
wire   [7:0] sub_ln67_2_fu_913_p2;
reg   [7:0] sub_ln67_2_reg_1175;
wire   [1:0] n_fu_925_p2;
reg   [1:0] n_reg_1183;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln66_fu_919_p2;
wire   [31:0] input_0_q0;
reg   [31:0] input_0_load_reg_1198;
wire    ap_CS_fsm_state17;
wire   [31:0] filter_q0;
reg   [31:0] filter_load_reg_1203;
wire   [31:0] grp_fu_414_p2;
reg   [31:0] tmp_6_reg_1208;
wire    ap_CS_fsm_state21;
wire   [31:0] grp_fu_407_p2;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state30;
reg   [13:0] input_0_address0;
reg    input_0_ce0;
reg    input_0_we0;
reg   [6:0] filter_address0;
reg    filter_ce0;
reg    filter_we0;
reg   [30:0] count_0_reg_202;
reg   [1:0] channel_0_reg_213;
reg   [1:0] row_0_reg_224;
reg   [1:0] col_0_reg_235;
reg   [30:0] count_1_reg_246;
reg   [1:0] channel_1_reg_257;
reg   [30:0] row_1_reg_268;
reg   [31:0] col_1_reg_279;
reg   [30:0] input_count_0_reg_290;
reg   [30:0] filter_count_0_reg_301;
wire   [0:0] icmp_ln60_fu_768_p2;
wire   [0:0] icmp_ln56_fu_712_p2;
reg   [30:0] row_2_reg_312;
wire   [0:0] icmp_ln61_fu_779_p2;
reg   [31:0] col_2_reg_324;
reg   [1:0] channel_2_reg_336;
reg   [31:0] axi_tmp_data_reg_347;
reg   [1:0] m_0_reg_361;
reg   [31:0] x_0_reg_372;
reg   [1:0] n_0_reg_384;
reg   [31:0] x_1_reg_395;
wire   [63:0] zext_ln32_5_fu_583_p1;
wire   [63:0] zext_ln44_1_fu_698_p1;
wire   [63:0] zext_ln67_7_fu_950_p1;
wire   [63:0] zext_ln67_9_fu_964_p1;
reg   [0:0] tmp_last_fu_84;
reg   [0:0] tmp_last_1_fu_96;
reg   [31:0] grp_fu_407_p0;
reg   [31:0] grp_fu_407_p1;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state18;
wire   [31:0] zext_ln27_fu_421_p1;
wire   [32:0] tmp_2_fu_440_p3;
wire   [33:0] zext_ln32_1_fu_448_p1;
wire   [33:0] zext_ln32_fu_436_p1;
wire   [33:0] sub_ln32_fu_452_p2;
wire   [34:0] zext_ln32_3_fu_479_p1;
wire  signed [34:0] add_ln32_fu_483_p2;
wire   [36:0] tmp_3_fu_492_p3;
wire  signed [63:0] sext_ln32_2_fu_500_p1;
wire  signed [63:0] sext_ln32_1_fu_488_p1;
wire   [63:0] zext_ln32_2_fu_522_p1;
wire   [63:0] add_ln32_1_fu_526_p2;
wire   [5:0] trunc_ln32_1_fu_535_p1;
wire   [7:0] p_shl2_cast_fu_539_p3;
wire   [7:0] trunc_ln32_fu_531_p1;
wire   [7:0] zext_ln32_4_fu_574_p1;
wire   [7:0] add_ln32_2_fu_578_p2;
wire   [31:0] zext_ln39_fu_593_p1;
wire   [31:0] zext_ln41_fu_633_p1;
wire   [8:0] zext_ln44_fu_652_p1;
wire   [8:0] trunc_ln44_fu_648_p1;
wire   [8:0] add_ln44_fu_655_p2;
wire   [14:0] trunc_ln44_1_fu_689_p1;
wire   [14:0] add_ln44_1_fu_693_p2;
wire   [31:0] zext_ln56_fu_708_p1;
wire   [31:0] zext_ln57_fu_723_p1;
wire   [32:0] tmp_9_fu_742_p3;
wire   [33:0] zext_ln67_1_fu_750_p1;
wire   [33:0] zext_ln67_fu_738_p1;
wire   [33:0] sub_ln67_fu_754_p2;
wire   [31:0] zext_ln60_fu_764_p1;
wire   [7:0] tmp_s_fu_806_p3;
wire   [34:0] zext_ln67_3_fu_802_p1;
wire  signed [34:0] add_ln67_fu_818_p2;
wire   [36:0] tmp_4_fu_827_p3;
wire  signed [63:0] sext_ln67_2_fu_835_p1;
wire  signed [63:0] sext_ln67_1_fu_823_p1;
wire   [8:0] trunc_ln67_fu_865_p1;
wire   [8:0] zext_ln67_5_fu_861_p1;
wire   [8:0] add_ln67_1_fu_869_p2;
wire   [8:0] add_ln67_2_fu_875_p2;
wire   [63:0] zext_ln67_2_fu_888_p1;
wire   [63:0] add_ln67_3_fu_892_p2;
wire   [5:0] trunc_ln67_2_fu_901_p1;
wire   [7:0] p_shl5_cast_fu_905_p3;
wire   [7:0] trunc_ln67_1_fu_897_p1;
wire   [14:0] trunc_ln67_3_fu_935_p1;
wire   [14:0] zext_ln67_6_fu_931_p1;
wire   [14:0] add_ln67_4_fu_939_p2;
wire   [14:0] add_ln67_5_fu_945_p2;
wire   [7:0] zext_ln67_8_fu_955_p1;
wire   [7:0] add_ln67_6_fu_959_p2;
reg   [30:0] ap_NS_fsm;
reg    stream_output_TVALID_int;
wire    stream_output_TREADY_int;
wire    regslice_both_stream_output_V_data_U_vld_out;
wire    regslice_both_w1_stream_output_V_last_U_apdone_blk;
wire    stream_output_TLAST_int;
wire    regslice_both_w1_stream_output_V_last_U_ack_in_dummy;
wire    regslice_both_w1_stream_output_V_last_U_vld_out;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
end

conv2d_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
conv2d_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input_size(input_size),
    .input_number(input_number),
    .filter_number(filter_number)
);

conv2d_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 12288 ),
    .AddressWidth( 14 ))
input_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_0_address0),
    .ce0(input_0_ce0),
    .we0(input_0_we0),
    .d0(stream_input_TDATA),
    .q0(input_0_q0)
);

conv2d_filter #(
    .DataWidth( 32 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
filter_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(filter_address0),
    .ce0(filter_ce0),
    .we0(filter_we0),
    .d0(stream_filter_TDATA),
    .q0(filter_q0)
);

conv2d_fadd_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv2d_fadd_32ns_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_407_p0),
    .din1(grp_fu_407_p1),
    .ce(1'b1),
    .dout(grp_fu_407_p2)
);

conv2d_fmul_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv2d_fmul_32ns_cud_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(input_0_load_reg_1198),
    .din1(filter_load_reg_1203),
    .ce(1'b1),
    .dout(grp_fu_414_p2)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_stream_output_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(axi_tmp_data_reg_347),
    .vld_in(stream_output_TVALID_int),
    .ack_in(stream_output_TREADY_int),
    .data_out(stream_output_TDATA),
    .vld_out(regslice_both_stream_output_V_data_U_vld_out),
    .ack_out(stream_output_TREADY),
    .apdone_blk(regslice_both_stream_output_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_stream_output_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_output_TLAST_int),
    .vld_in(stream_output_TVALID_int),
    .ack_in(regslice_both_w1_stream_output_V_last_U_ack_in_dummy),
    .data_out(stream_output_TLAST),
    .vld_out(regslice_both_w1_stream_output_V_last_U_vld_out),
    .ack_out(stream_output_TREADY),
    .apdone_blk(regslice_both_w1_stream_output_V_last_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_779_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        axi_tmp_data_reg_347 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        axi_tmp_data_reg_347 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        channel_0_reg_213 <= channel_reg_1017;
    end else if (((icmp_ln27_fu_425_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        channel_0_reg_213 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_597_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        channel_1_reg_257 <= 2'd0;
    end else if (((icmp_ln41_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        channel_1_reg_257 <= channel_3_reg_1068;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_779_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        channel_2_reg_336 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        channel_2_reg_336 <= channel_4_reg_1142;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        col_0_reg_235 <= 2'd0;
    end else if ((~((ap_predicate_op104_read_state5 == 1'b1) & (stream_filter_TVALID == 1'b0)) & (tmp_nbreadreq_fu_118_p4 == 1'd1) & (icmp_ln30_fu_553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        col_0_reg_235 <= col_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        col_1_reg_279 <= 32'd0;
    end else if ((~((ap_predicate_op148_read_state9 == 1'b1) & (stream_input_TVALID == 1'b0)) & (tmp_1_nbreadreq_fu_136_p4 == 1'd1) & (icmp_ln42_fu_669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        col_1_reg_279 <= col_3_fu_674_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        col_2_reg_324 <= 32'd0;
    end else if (((stream_output_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
        col_2_reg_324 <= col_4_reg_1134;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_467_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        count_0_reg_202 <= count_reg_997;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        count_0_reg_202 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        count_1_reg_246 <= count_2_reg_1054;
    end else if (((icmp_ln27_fu_425_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        count_1_reg_246 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln56_fu_712_p2 == 1'd1) & (regslice_both_stream_output_V_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
        filter_count_0_reg_301 <= 31'd0;
    end else if (((icmp_ln60_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        filter_count_0_reg_301 <= filter_count_reg_1113;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        input_count_0_reg_290 <= input_count_reg_1105;
    end else if (((icmp_ln39_fu_597_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        input_count_0_reg_290 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln66_fu_919_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        m_0_reg_361 <= m_reg_1165;
    end else if (((icmp_ln63_fu_790_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        m_0_reg_361 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_849_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        n_0_reg_384 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        n_0_reg_384 <= n_reg_1183;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        row_0_reg_224 <= 2'd0;
    end else if ((~((ap_predicate_op104_read_state5 == 1'b1) & (stream_filter_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state5) & ((tmp_nbreadreq_fu_118_p4 == 1'd0) | (icmp_ln30_fu_553_p2 == 1'd1)))) begin
        row_0_reg_224 <= row_reg_1030;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        row_1_reg_268 <= 31'd0;
    end else if ((~((ap_predicate_op148_read_state9 == 1'b1) & (stream_input_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9) & ((tmp_1_nbreadreq_fu_136_p4 == 1'd0) | (icmp_ln42_fu_669_p2 == 1'd0)))) begin
        row_1_reg_268 <= row_4_reg_1081;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_779_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        row_2_reg_312 <= row_3_reg_1126;
    end else if (((icmp_ln57_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        row_2_reg_312 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op148_read_state9 == 1'b1) & (stream_input_TVALID == 1'b0)) & (tmp_1_nbreadreq_fu_136_p4 == 1'd1) & (icmp_ln42_fu_669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        tmp_last_1_fu_96 <= stream_input_TLAST;
    end else if (((icmp_ln27_fu_425_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_last_1_fu_96 <= tmp_last_fu_84;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln66_fu_919_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        x_0_reg_372 <= x_1_reg_395;
    end else if (((icmp_ln63_fu_790_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        x_0_reg_372 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_849_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        x_1_reg_395 <= x_0_reg_372;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x_1_reg_395 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        channel_3_reg_1068 <= channel_3_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        channel_4_reg_1142 <= channel_4_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        channel_reg_1017 <= channel_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        col_4_reg_1134 <= col_4_fu_784_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        count_2_reg_1054 <= count_2_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        count_reg_997 <= count_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        filter_count_reg_1113 <= filter_count_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        filter_load_reg_1203 <= filter_q0;
        input_0_load_reg_1198 <= input_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        filter_number_read_reg_975 <= filter_number;
        input_number_read_reg_981 <= input_number;
        input_size_read_reg_987 <= input_size;
    end
end

always @ (posedge ap_clk) begin
    if (((regslice_both_stream_output_V_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
        input_count_reg_1105 <= input_count_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        m_reg_1165 <= m_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_597_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        map_boundary_reg_1059 <= map_boundary_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        n_reg_1183 <= n_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        row_3_reg_1126 <= row_3_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        row_4_reg_1081 <= row_4_fu_642_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        row_reg_1030 <= row_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_425_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        sext_ln32_reg_1002 <= sext_ln32_fu_458_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_727_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        sext_ln67_reg_1118 <= sext_ln67_fu_760_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        sub_ln32_1_reg_1022 <= sub_ln32_1_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        sub_ln32_2_reg_1035 <= sub_ln32_2_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_fu_790_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        sub_ln67_1_reg_1152 <= sub_ln67_1_fu_839_p2;
        zext_ln67_4_reg_1147[7 : 6] <= zext_ln67_4_fu_814_p1[7 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_849_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        sub_ln67_2_reg_1175 <= sub_ln67_2_fu_913_p2;
        tmp_13_cast_reg_1170[14 : 6] <= tmp_13_cast_fu_880_p3[14 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_5_reg_1073[7 : 6] <= tmp_5_fu_625_p3[7 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_6_reg_1208 <= grp_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_8_cast_reg_1086[14 : 6] <= tmp_8_cast_fu_661_p3[14 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op104_read_state5 == 1'b1) & (stream_filter_TVALID == 1'b0)) & (tmp_nbreadreq_fu_118_p4 == 1'd1) & (icmp_ln30_fu_553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_last_fu_84 <= stream_filter_TLAST;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        filter_address0 = zext_ln67_9_fu_964_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        filter_address0 = zext_ln32_5_fu_583_p1;
    end else begin
        filter_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (~((ap_predicate_op104_read_state5 == 1'b1) & (stream_filter_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        filter_ce0 = 1'b1;
    end else begin
        filter_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op104_read_state5 == 1'b1) & (stream_filter_TVALID == 1'b0)) & (tmp_nbreadreq_fu_118_p4 == 1'd1) & (icmp_ln30_fu_553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        filter_we0 = 1'b1;
    end else begin
        filter_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_407_p0 = x_1_reg_395;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_407_p0 = axi_tmp_data_reg_347;
    end else begin
        grp_fu_407_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_407_p1 = tmp_6_reg_1208;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_407_p1 = x_0_reg_372;
    end else begin
        grp_fu_407_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        input_0_address0 = zext_ln67_7_fu_950_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_0_address0 = zext_ln44_1_fu_698_p1;
    end else begin
        input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (~((ap_predicate_op148_read_state9 == 1'b1) & (stream_input_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op148_read_state9 == 1'b1) & (stream_input_TVALID == 1'b0)) & (tmp_1_nbreadreq_fu_136_p4 == 1'd1) & (icmp_ln42_fu_669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        input_0_we0 = 1'b1;
    end else begin
        input_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_118_p4 == 1'd1) & (icmp_ln30_fu_553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        stream_filter_TDATA_blk_n = stream_filter_TVALID;
    end else begin
        stream_filter_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op104_read_state5 == 1'b1) & (stream_filter_TVALID == 1'b0)) & (ap_predicate_op104_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        stream_filter_TREADY = 1'b1;
    end else begin
        stream_filter_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_nbreadreq_fu_136_p4 == 1'd1) & (icmp_ln42_fu_669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        stream_input_TDATA_blk_n = stream_input_TVALID;
    end else begin
        stream_input_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op148_read_state9 == 1'b1) & (stream_input_TVALID == 1'b0)) & (ap_predicate_op148_read_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        stream_input_TREADY = 1'b1;
    end else begin
        stream_input_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((icmp_ln63_fu_790_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14)))) begin
        stream_output_TDATA_blk_n = stream_output_TREADY_int;
    end else begin
        stream_output_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_790_p2 == 1'd1) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
        stream_output_TVALID_int = 1'b1;
    end else begin
        stream_output_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln27_fu_425_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln28_fu_467_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln29_fu_510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((ap_predicate_op104_read_state5 == 1'b1) & (stream_filter_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state5) & ((tmp_nbreadreq_fu_118_p4 == 1'd0) | (icmp_ln30_fu_553_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((ap_predicate_op104_read_state5 == 1'b1) & (stream_filter_TVALID == 1'b0)) & (tmp_nbreadreq_fu_118_p4 == 1'd1) & (icmp_ln30_fu_553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln39_fu_597_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln40_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln41_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((ap_predicate_op148_read_state9 == 1'b1) & (stream_input_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9) & ((tmp_1_nbreadreq_fu_136_p4 == 1'd0) | (icmp_ln42_fu_669_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if ((~((ap_predicate_op148_read_state9 == 1'b1) & (stream_input_TVALID == 1'b0)) & (tmp_1_nbreadreq_fu_136_p4 == 1'd1) & (icmp_ln42_fu_669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln56_fu_712_p2 == 1'd0) & (regslice_both_stream_output_V_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln56_fu_712_p2 == 1'd1) & (regslice_both_stream_output_V_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln57_fu_727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln60_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln61_fu_779_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln63_fu_790_p2 == 1'd0) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((icmp_ln63_fu_790_p2 == 1'd1) & (1'b0 == ap_block_state14_io) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln65_fu_849_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln66_fu_919_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state31 : begin
            if (((stream_output_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln32_1_fu_526_p2 = (sub_ln32_1_reg_1022 + zext_ln32_2_fu_522_p1);

assign add_ln32_2_fu_578_p2 = (sub_ln32_2_reg_1035 + zext_ln32_4_fu_574_p1);

assign add_ln32_fu_483_p2 = ($signed(sext_ln32_reg_1002) + $signed(zext_ln32_3_fu_479_p1));

assign add_ln44_1_fu_693_p2 = (tmp_8_cast_reg_1086 + trunc_ln44_1_fu_689_p1);

assign add_ln44_fu_655_p2 = (zext_ln44_fu_652_p1 + trunc_ln44_fu_648_p1);

assign add_ln67_1_fu_869_p2 = (trunc_ln67_fu_865_p1 + zext_ln67_5_fu_861_p1);

assign add_ln67_2_fu_875_p2 = (add_ln67_1_fu_869_p2 + zext_ln67_4_reg_1147);

assign add_ln67_3_fu_892_p2 = (zext_ln67_2_fu_888_p1 + sub_ln67_1_reg_1152);

assign add_ln67_4_fu_939_p2 = (trunc_ln67_3_fu_935_p1 + zext_ln67_6_fu_931_p1);

assign add_ln67_5_fu_945_p2 = (add_ln67_4_fu_939_p2 + tmp_13_cast_reg_1170);

assign add_ln67_6_fu_959_p2 = (zext_ln67_8_fu_955_p1 + sub_ln67_2_reg_1175);

assign add_ln67_fu_818_p2 = ($signed(zext_ln67_3_fu_802_p1) + $signed(sext_ln67_reg_1118));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state14_io = ((icmp_ln63_fu_790_p2 == 1'd1) & (stream_output_TREADY_int == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((ap_predicate_op104_read_state5 == 1'b1) & (stream_filter_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state9 = ((ap_predicate_op148_read_state9 == 1'b1) & (stream_input_TVALID == 1'b0));
end

always @ (*) begin
    ap_predicate_op104_read_state5 = ((tmp_nbreadreq_fu_118_p4 == 1'd1) & (icmp_ln30_fu_553_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op148_read_state9 = ((tmp_1_nbreadreq_fu_136_p4 == 1'd1) & (icmp_ln42_fu_669_p2 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign channel_3_fu_619_p2 = (channel_1_reg_257 + 2'd1);

assign channel_4_fu_796_p2 = (channel_2_reg_336 + 2'd1);

assign channel_fu_473_p2 = (channel_0_reg_213 + 2'd1);

assign col_3_fu_674_p2 = (col_1_reg_279 + 32'd1);

assign col_4_fu_784_p2 = (col_2_reg_324 + 32'd1);

assign col_fu_559_p2 = (col_0_reg_235 + 2'd1);

assign count_2_fu_602_p2 = (count_1_reg_246 + 31'd1);

assign count_fu_430_p2 = (count_0_reg_202 + 31'd1);

assign filter_count_fu_732_p2 = (filter_count_0_reg_301 + 31'd1);

assign icmp_ln27_fu_425_p2 = (($signed(zext_ln27_fu_421_p1) < $signed(filter_number_read_reg_975)) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_467_p2 = ((channel_0_reg_213 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_510_p2 = ((row_0_reg_224 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_553_p2 = ((col_0_reg_235 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_597_p2 = (($signed(zext_ln39_fu_593_p1) < $signed(input_number_read_reg_981)) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_613_p2 = ((channel_1_reg_257 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_637_p2 = (($signed(zext_ln41_fu_633_p1) < $signed(input_size_read_reg_987)) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_669_p2 = (($signed(col_1_reg_279) < $signed(input_size_read_reg_987)) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_712_p2 = (($signed(zext_ln56_fu_708_p1) < $signed(input_number_read_reg_981)) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_727_p2 = (($signed(zext_ln57_fu_723_p1) < $signed(filter_number_read_reg_975)) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_768_p2 = (($signed(zext_ln60_fu_764_p1) < $signed(map_boundary_reg_1059)) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_779_p2 = ((col_2_reg_324 == map_boundary_reg_1059) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_790_p2 = ((channel_2_reg_336 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_849_p2 = ((m_0_reg_361 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_919_p2 = ((n_0_reg_384 == 2'd3) ? 1'b1 : 1'b0);

assign input_count_fu_717_p2 = (input_count_0_reg_290 + 31'd1);

assign m_fu_855_p2 = (m_0_reg_361 + 2'd1);

assign map_boundary_fu_608_p2 = ($signed(input_size_read_reg_987) + $signed(32'd4294967294));

assign n_fu_925_p2 = (n_0_reg_384 + 2'd1);

assign p_shl2_cast_fu_539_p3 = {{trunc_ln32_1_fu_535_p1}, {2'd0}};

assign p_shl5_cast_fu_905_p3 = {{trunc_ln67_2_fu_901_p1}, {2'd0}};

assign row_3_fu_773_p2 = (row_2_reg_312 + 31'd1);

assign row_4_fu_642_p2 = (row_1_reg_268 + 31'd1);

assign row_fu_516_p2 = (row_0_reg_224 + 2'd1);

assign sext_ln32_1_fu_488_p1 = add_ln32_fu_483_p2;

assign sext_ln32_2_fu_500_p1 = $signed(tmp_3_fu_492_p3);

assign sext_ln32_fu_458_p1 = $signed(sub_ln32_fu_452_p2);

assign sext_ln67_1_fu_823_p1 = add_ln67_fu_818_p2;

assign sext_ln67_2_fu_835_p1 = $signed(tmp_4_fu_827_p3);

assign sext_ln67_fu_760_p1 = $signed(sub_ln67_fu_754_p2);

assign stream_output_TLAST_int = tmp_last_1_fu_96;

assign stream_output_TVALID = regslice_both_stream_output_V_data_U_vld_out;

assign sub_ln32_1_fu_504_p2 = ($signed(sext_ln32_2_fu_500_p1) - $signed(sext_ln32_1_fu_488_p1));

assign sub_ln32_2_fu_547_p2 = (p_shl2_cast_fu_539_p3 - trunc_ln32_fu_531_p1);

assign sub_ln32_fu_452_p2 = (zext_ln32_1_fu_448_p1 - zext_ln32_fu_436_p1);

assign sub_ln67_1_fu_839_p2 = ($signed(sext_ln67_2_fu_835_p1) - $signed(sext_ln67_1_fu_823_p1));

assign sub_ln67_2_fu_913_p2 = (p_shl5_cast_fu_905_p3 - trunc_ln67_1_fu_897_p1);

assign sub_ln67_fu_754_p2 = (zext_ln67_1_fu_750_p1 - zext_ln67_fu_738_p1);

assign tmp_13_cast_fu_880_p3 = {{add_ln67_2_fu_875_p2}, {6'd0}};

assign tmp_1_nbreadreq_fu_136_p4 = stream_input_TVALID;

assign tmp_2_fu_440_p3 = {{count_0_reg_202}, {2'd0}};

assign tmp_3_fu_492_p3 = {{add_ln32_fu_483_p2}, {2'd0}};

assign tmp_4_fu_827_p3 = {{add_ln67_fu_818_p2}, {2'd0}};

assign tmp_5_fu_625_p3 = {{channel_1_reg_257}, {6'd0}};

assign tmp_8_cast_fu_661_p3 = {{add_ln44_fu_655_p2}, {6'd0}};

assign tmp_9_fu_742_p3 = {{filter_count_0_reg_301}, {2'd0}};

assign tmp_nbreadreq_fu_118_p4 = stream_filter_TVALID;

assign tmp_s_fu_806_p3 = {{channel_2_reg_336}, {6'd0}};

assign trunc_ln32_1_fu_535_p1 = add_ln32_1_fu_526_p2[5:0];

assign trunc_ln32_fu_531_p1 = add_ln32_1_fu_526_p2[7:0];

assign trunc_ln44_1_fu_689_p1 = col_1_reg_279[14:0];

assign trunc_ln44_fu_648_p1 = row_1_reg_268[8:0];

assign trunc_ln67_1_fu_897_p1 = add_ln67_3_fu_892_p2[7:0];

assign trunc_ln67_2_fu_901_p1 = add_ln67_3_fu_892_p2[5:0];

assign trunc_ln67_3_fu_935_p1 = col_2_reg_324[14:0];

assign trunc_ln67_fu_865_p1 = row_2_reg_312[8:0];

assign zext_ln27_fu_421_p1 = count_0_reg_202;

assign zext_ln32_1_fu_448_p1 = tmp_2_fu_440_p3;

assign zext_ln32_2_fu_522_p1 = row_0_reg_224;

assign zext_ln32_3_fu_479_p1 = channel_0_reg_213;

assign zext_ln32_4_fu_574_p1 = col_0_reg_235;

assign zext_ln32_5_fu_583_p1 = add_ln32_2_fu_578_p2;

assign zext_ln32_fu_436_p1 = count_0_reg_202;

assign zext_ln39_fu_593_p1 = count_1_reg_246;

assign zext_ln41_fu_633_p1 = row_1_reg_268;

assign zext_ln44_1_fu_698_p1 = add_ln44_1_fu_693_p2;

assign zext_ln44_fu_652_p1 = tmp_5_reg_1073;

assign zext_ln56_fu_708_p1 = input_count_0_reg_290;

assign zext_ln57_fu_723_p1 = filter_count_0_reg_301;

assign zext_ln60_fu_764_p1 = row_2_reg_312;

assign zext_ln67_1_fu_750_p1 = tmp_9_fu_742_p3;

assign zext_ln67_2_fu_888_p1 = m_0_reg_361;

assign zext_ln67_3_fu_802_p1 = channel_2_reg_336;

assign zext_ln67_4_fu_814_p1 = tmp_s_fu_806_p3;

assign zext_ln67_5_fu_861_p1 = m_0_reg_361;

assign zext_ln67_6_fu_931_p1 = n_0_reg_384;

assign zext_ln67_7_fu_950_p1 = add_ln67_5_fu_945_p2;

assign zext_ln67_8_fu_955_p1 = n_0_reg_384;

assign zext_ln67_9_fu_964_p1 = add_ln67_6_fu_959_p2;

assign zext_ln67_fu_738_p1 = filter_count_0_reg_301;

always @ (posedge ap_clk) begin
    tmp_5_reg_1073[5:0] <= 6'b000000;
    tmp_8_cast_reg_1086[5:0] <= 6'b000000;
    zext_ln67_4_reg_1147[5:0] <= 6'b000000;
    zext_ln67_4_reg_1147[8] <= 1'b0;
    tmp_13_cast_reg_1170[5:0] <= 6'b000000;
end

endmodule //conv2d
