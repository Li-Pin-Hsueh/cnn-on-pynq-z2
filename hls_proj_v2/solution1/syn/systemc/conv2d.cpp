// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv2d.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv2d::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv2d::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<31> conv2d::ap_ST_fsm_state1 = "1";
const sc_lv<31> conv2d::ap_ST_fsm_state2 = "10";
const sc_lv<31> conv2d::ap_ST_fsm_state3 = "100";
const sc_lv<31> conv2d::ap_ST_fsm_state4 = "1000";
const sc_lv<31> conv2d::ap_ST_fsm_state5 = "10000";
const sc_lv<31> conv2d::ap_ST_fsm_state6 = "100000";
const sc_lv<31> conv2d::ap_ST_fsm_state7 = "1000000";
const sc_lv<31> conv2d::ap_ST_fsm_state8 = "10000000";
const sc_lv<31> conv2d::ap_ST_fsm_state9 = "100000000";
const sc_lv<31> conv2d::ap_ST_fsm_state10 = "1000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state11 = "10000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state12 = "100000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<31> conv2d::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const bool conv2d::ap_const_boolean_1 = true;
const sc_lv<32> conv2d::ap_const_lv32_4 = "100";
const sc_lv<1> conv2d::ap_const_lv1_0 = "0";
const sc_lv<1> conv2d::ap_const_lv1_1 = "1";
const sc_lv<32> conv2d::ap_const_lv32_8 = "1000";
const sc_lv<32> conv2d::ap_const_lv32_D = "1101";
const sc_lv<32> conv2d::ap_const_lv32_1E = "11110";
const int conv2d::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> conv2d::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv2d::ap_const_lv32_1 = "1";
const sc_lv<32> conv2d::ap_const_lv32_2 = "10";
const sc_lv<32> conv2d::ap_const_lv32_3 = "11";
const sc_lv<32> conv2d::ap_const_lv32_5 = "101";
const sc_lv<32> conv2d::ap_const_lv32_6 = "110";
const sc_lv<32> conv2d::ap_const_lv32_7 = "111";
const sc_lv<32> conv2d::ap_const_lv32_9 = "1001";
const sc_lv<32> conv2d::ap_const_lv32_A = "1010";
const sc_lv<32> conv2d::ap_const_lv32_B = "1011";
const sc_lv<32> conv2d::ap_const_lv32_C = "1100";
const bool conv2d::ap_const_boolean_0 = false;
const sc_lv<32> conv2d::ap_const_lv32_E = "1110";
const sc_lv<32> conv2d::ap_const_lv32_F = "1111";
const sc_lv<32> conv2d::ap_const_lv32_10 = "10000";
const sc_lv<32> conv2d::ap_const_lv32_14 = "10100";
const sc_lv<32> conv2d::ap_const_lv32_19 = "11001";
const sc_lv<32> conv2d::ap_const_lv32_1D = "11101";
const sc_lv<31> conv2d::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<2> conv2d::ap_const_lv2_0 = "00";
const sc_lv<32> conv2d::ap_const_lv32_15 = "10101";
const sc_lv<32> conv2d::ap_const_lv32_11 = "10001";
const sc_lv<31> conv2d::ap_const_lv31_1 = "1";
const sc_lv<2> conv2d::ap_const_lv2_3 = "11";
const sc_lv<2> conv2d::ap_const_lv2_1 = "1";
const sc_lv<32> conv2d::ap_const_lv32_FFFFFFFE = "11111111111111111111111111111110";
const sc_lv<6> conv2d::ap_const_lv6_0 = "000000";

conv2d::conv2d(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv2d_AXILiteS_s_axi_U = new conv2d_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("conv2d_AXILiteS_s_axi_U");
    conv2d_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    conv2d_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    conv2d_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    conv2d_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    conv2d_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    conv2d_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    conv2d_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    conv2d_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    conv2d_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    conv2d_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    conv2d_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    conv2d_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    conv2d_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    conv2d_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    conv2d_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    conv2d_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    conv2d_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    conv2d_AXILiteS_s_axi_U->ACLK(ap_clk);
    conv2d_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    conv2d_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    conv2d_AXILiteS_s_axi_U->input_size(input_size);
    conv2d_AXILiteS_s_axi_U->input_number(input_number);
    conv2d_AXILiteS_s_axi_U->filter_number(filter_number);
    input_0_U = new conv2d_input_0("input_0_U");
    input_0_U->clk(ap_clk);
    input_0_U->reset(ap_rst_n_inv);
    input_0_U->address0(input_0_address0);
    input_0_U->ce0(input_0_ce0);
    input_0_U->we0(input_0_we0);
    input_0_U->d0(stream_input_TDATA);
    input_0_U->q0(input_0_q0);
    filter_U = new conv2d_filter("filter_U");
    filter_U->clk(ap_clk);
    filter_U->reset(ap_rst_n_inv);
    filter_U->address0(filter_address0);
    filter_U->ce0(filter_ce0);
    filter_U->we0(filter_we0);
    filter_U->d0(stream_filter_TDATA);
    filter_U->q0(filter_q0);
    conv2d_fadd_32ns_bkb_U1 = new conv2d_fadd_32ns_bkb<1,5,32,32,32>("conv2d_fadd_32ns_bkb_U1");
    conv2d_fadd_32ns_bkb_U1->clk(ap_clk);
    conv2d_fadd_32ns_bkb_U1->reset(ap_rst_n_inv);
    conv2d_fadd_32ns_bkb_U1->din0(grp_fu_407_p0);
    conv2d_fadd_32ns_bkb_U1->din1(grp_fu_407_p1);
    conv2d_fadd_32ns_bkb_U1->ce(ap_var_for_const0);
    conv2d_fadd_32ns_bkb_U1->dout(grp_fu_407_p2);
    conv2d_fmul_32ns_cud_U2 = new conv2d_fmul_32ns_cud<1,4,32,32,32>("conv2d_fmul_32ns_cud_U2");
    conv2d_fmul_32ns_cud_U2->clk(ap_clk);
    conv2d_fmul_32ns_cud_U2->reset(ap_rst_n_inv);
    conv2d_fmul_32ns_cud_U2->din0(input_0_load_reg_1198);
    conv2d_fmul_32ns_cud_U2->din1(filter_load_reg_1203);
    conv2d_fmul_32ns_cud_U2->ce(ap_var_for_const0);
    conv2d_fmul_32ns_cud_U2->dout(grp_fu_414_p2);
    regslice_both_stream_output_V_data_U = new regslice_both<32>("regslice_both_stream_output_V_data_U");
    regslice_both_stream_output_V_data_U->ap_clk(ap_clk);
    regslice_both_stream_output_V_data_U->ap_rst(ap_rst_n_inv);
    regslice_both_stream_output_V_data_U->data_in(axi_tmp_data_reg_347);
    regslice_both_stream_output_V_data_U->vld_in(stream_output_TVALID_int);
    regslice_both_stream_output_V_data_U->ack_in(stream_output_TREADY_int);
    regslice_both_stream_output_V_data_U->data_out(stream_output_TDATA);
    regslice_both_stream_output_V_data_U->vld_out(regslice_both_stream_output_V_data_U_vld_out);
    regslice_both_stream_output_V_data_U->ack_out(stream_output_TREADY);
    regslice_both_stream_output_V_data_U->apdone_blk(regslice_both_stream_output_V_data_U_apdone_blk);
    regslice_both_w1_stream_output_V_last_U = new regslice_both_w1<1>("regslice_both_w1_stream_output_V_last_U");
    regslice_both_w1_stream_output_V_last_U->ap_clk(ap_clk);
    regslice_both_w1_stream_output_V_last_U->ap_rst(ap_rst_n_inv);
    regslice_both_w1_stream_output_V_last_U->data_in(stream_output_TLAST_int);
    regslice_both_w1_stream_output_V_last_U->vld_in(stream_output_TVALID_int);
    regslice_both_w1_stream_output_V_last_U->ack_in(regslice_both_w1_stream_output_V_last_U_ack_in_dummy);
    regslice_both_w1_stream_output_V_last_U->data_out(stream_output_TLAST);
    regslice_both_w1_stream_output_V_last_U->vld_out(regslice_both_w1_stream_output_V_last_U_vld_out);
    regslice_both_w1_stream_output_V_last_U->ack_out(stream_output_TREADY);
    regslice_both_w1_stream_output_V_last_U->apdone_blk(regslice_both_w1_stream_output_V_last_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln32_1_fu_526_p2);
    sensitive << ( sub_ln32_1_reg_1022 );
    sensitive << ( zext_ln32_2_fu_522_p1 );

    SC_METHOD(thread_add_ln32_2_fu_578_p2);
    sensitive << ( sub_ln32_2_reg_1035 );
    sensitive << ( zext_ln32_4_fu_574_p1 );

    SC_METHOD(thread_add_ln32_fu_483_p2);
    sensitive << ( sext_ln32_reg_1002 );
    sensitive << ( zext_ln32_3_fu_479_p1 );

    SC_METHOD(thread_add_ln44_1_fu_693_p2);
    sensitive << ( tmp_8_cast_reg_1086 );
    sensitive << ( trunc_ln44_1_fu_689_p1 );

    SC_METHOD(thread_add_ln44_fu_655_p2);
    sensitive << ( zext_ln44_fu_652_p1 );
    sensitive << ( trunc_ln44_fu_648_p1 );

    SC_METHOD(thread_add_ln67_1_fu_869_p2);
    sensitive << ( trunc_ln67_fu_865_p1 );
    sensitive << ( zext_ln67_5_fu_861_p1 );

    SC_METHOD(thread_add_ln67_2_fu_875_p2);
    sensitive << ( zext_ln67_4_reg_1147 );
    sensitive << ( add_ln67_1_fu_869_p2 );

    SC_METHOD(thread_add_ln67_3_fu_892_p2);
    sensitive << ( sub_ln67_1_reg_1152 );
    sensitive << ( zext_ln67_2_fu_888_p1 );

    SC_METHOD(thread_add_ln67_4_fu_939_p2);
    sensitive << ( trunc_ln67_3_fu_935_p1 );
    sensitive << ( zext_ln67_6_fu_931_p1 );

    SC_METHOD(thread_add_ln67_5_fu_945_p2);
    sensitive << ( tmp_13_cast_reg_1170 );
    sensitive << ( add_ln67_4_fu_939_p2 );

    SC_METHOD(thread_add_ln67_6_fu_959_p2);
    sensitive << ( sub_ln67_2_reg_1175 );
    sensitive << ( zext_ln67_8_fu_955_p1 );

    SC_METHOD(thread_add_ln67_fu_818_p2);
    sensitive << ( sext_ln67_reg_1118 );
    sensitive << ( zext_ln67_3_fu_802_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state14_io);
    sensitive << ( icmp_ln63_fu_790_p2 );
    sensitive << ( stream_output_TREADY_int );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( stream_filter_TVALID );
    sensitive << ( ap_predicate_op104_read_state5 );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( stream_input_TVALID );
    sensitive << ( ap_predicate_op148_read_state9 );

    SC_METHOD(thread_ap_predicate_op104_read_state5);
    sensitive << ( icmp_ln30_fu_553_p2 );
    sensitive << ( tmp_nbreadreq_fu_118_p4 );

    SC_METHOD(thread_ap_predicate_op148_read_state9);
    sensitive << ( icmp_ln42_fu_669_p2 );
    sensitive << ( tmp_1_nbreadreq_fu_136_p4 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_channel_3_fu_619_p2);
    sensitive << ( channel_1_reg_257 );

    SC_METHOD(thread_channel_4_fu_796_p2);
    sensitive << ( channel_2_reg_336 );

    SC_METHOD(thread_channel_fu_473_p2);
    sensitive << ( channel_0_reg_213 );

    SC_METHOD(thread_col_3_fu_674_p2);
    sensitive << ( col_1_reg_279 );

    SC_METHOD(thread_col_4_fu_784_p2);
    sensitive << ( col_2_reg_324 );

    SC_METHOD(thread_col_fu_559_p2);
    sensitive << ( col_0_reg_235 );

    SC_METHOD(thread_count_2_fu_602_p2);
    sensitive << ( count_1_reg_246 );

    SC_METHOD(thread_count_fu_430_p2);
    sensitive << ( count_0_reg_202 );

    SC_METHOD(thread_filter_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( zext_ln32_5_fu_583_p1 );
    sensitive << ( zext_ln67_9_fu_964_p1 );

    SC_METHOD(thread_filter_ce0);
    sensitive << ( stream_filter_TVALID );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op104_read_state5 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_filter_count_fu_732_p2);
    sensitive << ( filter_count_0_reg_301 );

    SC_METHOD(thread_filter_we0);
    sensitive << ( stream_filter_TVALID );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln30_fu_553_p2 );
    sensitive << ( tmp_nbreadreq_fu_118_p4 );
    sensitive << ( ap_predicate_op104_read_state5 );

    SC_METHOD(thread_grp_fu_407_p0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( axi_tmp_data_reg_347 );
    sensitive << ( x_1_reg_395 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_407_p1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_6_reg_1208 );
    sensitive << ( x_0_reg_372 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_icmp_ln27_fu_425_p2);
    sensitive << ( filter_number_read_reg_975 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln27_fu_421_p1 );

    SC_METHOD(thread_icmp_ln28_fu_467_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( channel_0_reg_213 );

    SC_METHOD(thread_icmp_ln29_fu_510_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( row_0_reg_224 );

    SC_METHOD(thread_icmp_ln30_fu_553_p2);
    sensitive << ( stream_filter_TVALID );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op104_read_state5 );
    sensitive << ( col_0_reg_235 );

    SC_METHOD(thread_icmp_ln39_fu_597_p2);
    sensitive << ( input_number_read_reg_981 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln39_fu_593_p1 );

    SC_METHOD(thread_icmp_ln40_fu_613_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( channel_1_reg_257 );

    SC_METHOD(thread_icmp_ln41_fu_637_p2);
    sensitive << ( input_size_read_reg_987 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln41_fu_633_p1 );

    SC_METHOD(thread_icmp_ln42_fu_669_p2);
    sensitive << ( stream_input_TVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( input_size_read_reg_987 );
    sensitive << ( ap_predicate_op148_read_state9 );
    sensitive << ( col_1_reg_279 );

    SC_METHOD(thread_icmp_ln56_fu_712_p2);
    sensitive << ( input_number_read_reg_981 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( regslice_both_stream_output_V_data_U_apdone_blk );
    sensitive << ( zext_ln56_fu_708_p1 );

    SC_METHOD(thread_icmp_ln57_fu_727_p2);
    sensitive << ( filter_number_read_reg_975 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln57_fu_723_p1 );

    SC_METHOD(thread_icmp_ln60_fu_768_p2);
    sensitive << ( map_boundary_reg_1059 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln60_fu_764_p1 );

    SC_METHOD(thread_icmp_ln61_fu_779_p2);
    sensitive << ( map_boundary_reg_1059 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( col_2_reg_324 );

    SC_METHOD(thread_icmp_ln63_fu_790_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_state14_io );
    sensitive << ( channel_2_reg_336 );

    SC_METHOD(thread_icmp_ln65_fu_849_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( m_0_reg_361 );

    SC_METHOD(thread_icmp_ln66_fu_919_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( n_0_reg_384 );

    SC_METHOD(thread_input_0_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( zext_ln44_1_fu_698_p1 );
    sensitive << ( zext_ln67_7_fu_950_p1 );

    SC_METHOD(thread_input_0_ce0);
    sensitive << ( stream_input_TVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op148_read_state9 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_input_0_we0);
    sensitive << ( stream_input_TVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln42_fu_669_p2 );
    sensitive << ( tmp_1_nbreadreq_fu_136_p4 );
    sensitive << ( ap_predicate_op148_read_state9 );

    SC_METHOD(thread_input_count_fu_717_p2);
    sensitive << ( input_count_0_reg_290 );

    SC_METHOD(thread_m_fu_855_p2);
    sensitive << ( m_0_reg_361 );

    SC_METHOD(thread_map_boundary_fu_608_p2);
    sensitive << ( input_size_read_reg_987 );

    SC_METHOD(thread_n_fu_925_p2);
    sensitive << ( n_0_reg_384 );

    SC_METHOD(thread_p_shl2_cast_fu_539_p3);
    sensitive << ( trunc_ln32_1_fu_535_p1 );

    SC_METHOD(thread_p_shl5_cast_fu_905_p3);
    sensitive << ( trunc_ln67_2_fu_901_p1 );

    SC_METHOD(thread_row_3_fu_773_p2);
    sensitive << ( row_2_reg_312 );

    SC_METHOD(thread_row_4_fu_642_p2);
    sensitive << ( row_1_reg_268 );

    SC_METHOD(thread_row_fu_516_p2);
    sensitive << ( row_0_reg_224 );

    SC_METHOD(thread_sext_ln32_1_fu_488_p1);
    sensitive << ( add_ln32_fu_483_p2 );

    SC_METHOD(thread_sext_ln32_2_fu_500_p1);
    sensitive << ( tmp_3_fu_492_p3 );

    SC_METHOD(thread_sext_ln32_fu_458_p1);
    sensitive << ( sub_ln32_fu_452_p2 );

    SC_METHOD(thread_sext_ln67_1_fu_823_p1);
    sensitive << ( add_ln67_fu_818_p2 );

    SC_METHOD(thread_sext_ln67_2_fu_835_p1);
    sensitive << ( tmp_4_fu_827_p3 );

    SC_METHOD(thread_sext_ln67_fu_760_p1);
    sensitive << ( sub_ln67_fu_754_p2 );

    SC_METHOD(thread_stream_filter_TDATA_blk_n);
    sensitive << ( stream_filter_TVALID );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln30_fu_553_p2 );
    sensitive << ( tmp_nbreadreq_fu_118_p4 );

    SC_METHOD(thread_stream_filter_TREADY);
    sensitive << ( stream_filter_TVALID );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_predicate_op104_read_state5 );

    SC_METHOD(thread_stream_input_TDATA_blk_n);
    sensitive << ( stream_input_TVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln42_fu_669_p2 );
    sensitive << ( tmp_1_nbreadreq_fu_136_p4 );

    SC_METHOD(thread_stream_input_TREADY);
    sensitive << ( stream_input_TVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op148_read_state9 );

    SC_METHOD(thread_stream_output_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln63_fu_790_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( stream_output_TREADY_int );

    SC_METHOD(thread_stream_output_TLAST_int);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln63_fu_790_p2 );
    sensitive << ( tmp_last_1_fu_96 );

    SC_METHOD(thread_stream_output_TVALID);
    sensitive << ( regslice_both_stream_output_V_data_U_vld_out );

    SC_METHOD(thread_stream_output_TVALID_int);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln63_fu_790_p2 );
    sensitive << ( ap_block_state14_io );

    SC_METHOD(thread_sub_ln32_1_fu_504_p2);
    sensitive << ( sext_ln32_2_fu_500_p1 );
    sensitive << ( sext_ln32_1_fu_488_p1 );

    SC_METHOD(thread_sub_ln32_2_fu_547_p2);
    sensitive << ( p_shl2_cast_fu_539_p3 );
    sensitive << ( trunc_ln32_fu_531_p1 );

    SC_METHOD(thread_sub_ln32_fu_452_p2);
    sensitive << ( zext_ln32_1_fu_448_p1 );
    sensitive << ( zext_ln32_fu_436_p1 );

    SC_METHOD(thread_sub_ln67_1_fu_839_p2);
    sensitive << ( sext_ln67_2_fu_835_p1 );
    sensitive << ( sext_ln67_1_fu_823_p1 );

    SC_METHOD(thread_sub_ln67_2_fu_913_p2);
    sensitive << ( p_shl5_cast_fu_905_p3 );
    sensitive << ( trunc_ln67_1_fu_897_p1 );

    SC_METHOD(thread_sub_ln67_fu_754_p2);
    sensitive << ( zext_ln67_1_fu_750_p1 );
    sensitive << ( zext_ln67_fu_738_p1 );

    SC_METHOD(thread_tmp_13_cast_fu_880_p3);
    sensitive << ( add_ln67_2_fu_875_p2 );

    SC_METHOD(thread_tmp_1_nbreadreq_fu_136_p4);
    sensitive << ( stream_input_TVALID );

    SC_METHOD(thread_tmp_2_fu_440_p3);
    sensitive << ( count_0_reg_202 );

    SC_METHOD(thread_tmp_3_fu_492_p3);
    sensitive << ( add_ln32_fu_483_p2 );

    SC_METHOD(thread_tmp_4_fu_827_p3);
    sensitive << ( add_ln67_fu_818_p2 );

    SC_METHOD(thread_tmp_5_fu_625_p3);
    sensitive << ( channel_1_reg_257 );

    SC_METHOD(thread_tmp_8_cast_fu_661_p3);
    sensitive << ( add_ln44_fu_655_p2 );

    SC_METHOD(thread_tmp_9_fu_742_p3);
    sensitive << ( filter_count_0_reg_301 );

    SC_METHOD(thread_tmp_nbreadreq_fu_118_p4);
    sensitive << ( stream_filter_TVALID );

    SC_METHOD(thread_tmp_s_fu_806_p3);
    sensitive << ( channel_2_reg_336 );

    SC_METHOD(thread_trunc_ln32_1_fu_535_p1);
    sensitive << ( add_ln32_1_fu_526_p2 );

    SC_METHOD(thread_trunc_ln32_fu_531_p1);
    sensitive << ( add_ln32_1_fu_526_p2 );

    SC_METHOD(thread_trunc_ln44_1_fu_689_p1);
    sensitive << ( col_1_reg_279 );

    SC_METHOD(thread_trunc_ln44_fu_648_p1);
    sensitive << ( row_1_reg_268 );

    SC_METHOD(thread_trunc_ln67_1_fu_897_p1);
    sensitive << ( add_ln67_3_fu_892_p2 );

    SC_METHOD(thread_trunc_ln67_2_fu_901_p1);
    sensitive << ( add_ln67_3_fu_892_p2 );

    SC_METHOD(thread_trunc_ln67_3_fu_935_p1);
    sensitive << ( col_2_reg_324 );

    SC_METHOD(thread_trunc_ln67_fu_865_p1);
    sensitive << ( row_2_reg_312 );

    SC_METHOD(thread_zext_ln27_fu_421_p1);
    sensitive << ( count_0_reg_202 );

    SC_METHOD(thread_zext_ln32_1_fu_448_p1);
    sensitive << ( tmp_2_fu_440_p3 );

    SC_METHOD(thread_zext_ln32_2_fu_522_p1);
    sensitive << ( row_0_reg_224 );

    SC_METHOD(thread_zext_ln32_3_fu_479_p1);
    sensitive << ( channel_0_reg_213 );

    SC_METHOD(thread_zext_ln32_4_fu_574_p1);
    sensitive << ( col_0_reg_235 );

    SC_METHOD(thread_zext_ln32_5_fu_583_p1);
    sensitive << ( add_ln32_2_fu_578_p2 );

    SC_METHOD(thread_zext_ln32_fu_436_p1);
    sensitive << ( count_0_reg_202 );

    SC_METHOD(thread_zext_ln39_fu_593_p1);
    sensitive << ( count_1_reg_246 );

    SC_METHOD(thread_zext_ln41_fu_633_p1);
    sensitive << ( row_1_reg_268 );

    SC_METHOD(thread_zext_ln44_1_fu_698_p1);
    sensitive << ( add_ln44_1_fu_693_p2 );

    SC_METHOD(thread_zext_ln44_fu_652_p1);
    sensitive << ( tmp_5_reg_1073 );

    SC_METHOD(thread_zext_ln56_fu_708_p1);
    sensitive << ( input_count_0_reg_290 );

    SC_METHOD(thread_zext_ln57_fu_723_p1);
    sensitive << ( filter_count_0_reg_301 );

    SC_METHOD(thread_zext_ln60_fu_764_p1);
    sensitive << ( row_2_reg_312 );

    SC_METHOD(thread_zext_ln67_1_fu_750_p1);
    sensitive << ( tmp_9_fu_742_p3 );

    SC_METHOD(thread_zext_ln67_2_fu_888_p1);
    sensitive << ( m_0_reg_361 );

    SC_METHOD(thread_zext_ln67_3_fu_802_p1);
    sensitive << ( channel_2_reg_336 );

    SC_METHOD(thread_zext_ln67_4_fu_814_p1);
    sensitive << ( tmp_s_fu_806_p3 );

    SC_METHOD(thread_zext_ln67_5_fu_861_p1);
    sensitive << ( m_0_reg_361 );

    SC_METHOD(thread_zext_ln67_6_fu_931_p1);
    sensitive << ( n_0_reg_384 );

    SC_METHOD(thread_zext_ln67_7_fu_950_p1);
    sensitive << ( add_ln67_5_fu_945_p2 );

    SC_METHOD(thread_zext_ln67_8_fu_955_p1);
    sensitive << ( n_0_reg_384 );

    SC_METHOD(thread_zext_ln67_9_fu_964_p1);
    sensitive << ( add_ln67_6_fu_959_p2 );

    SC_METHOD(thread_zext_ln67_fu_738_p1);
    sensitive << ( filter_count_0_reg_301 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( stream_filter_TVALID );
    sensitive << ( stream_input_TVALID );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln30_fu_553_p2 );
    sensitive << ( tmp_nbreadreq_fu_118_p4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln42_fu_669_p2 );
    sensitive << ( tmp_1_nbreadreq_fu_136_p4 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln63_fu_790_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln27_fu_425_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln28_fu_467_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln29_fu_510_p2 );
    sensitive << ( ap_predicate_op104_read_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln39_fu_597_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln40_fu_613_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln41_fu_637_p2 );
    sensitive << ( ap_predicate_op148_read_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( regslice_both_stream_output_V_data_U_apdone_blk );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln57_fu_727_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_block_state14_io );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( icmp_ln65_fu_849_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln66_fu_919_p2 );
    sensitive << ( icmp_ln60_fu_768_p2 );
    sensitive << ( icmp_ln56_fu_712_p2 );
    sensitive << ( icmp_ln61_fu_779_p2 );
    sensitive << ( stream_output_TREADY_int );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv2d_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, stream_filter_TDATA, "(port)stream_filter_TDATA");
    sc_trace(mVcdFile, stream_filter_TVALID, "(port)stream_filter_TVALID");
    sc_trace(mVcdFile, stream_filter_TREADY, "(port)stream_filter_TREADY");
    sc_trace(mVcdFile, stream_filter_TLAST, "(port)stream_filter_TLAST");
    sc_trace(mVcdFile, stream_input_TDATA, "(port)stream_input_TDATA");
    sc_trace(mVcdFile, stream_input_TVALID, "(port)stream_input_TVALID");
    sc_trace(mVcdFile, stream_input_TREADY, "(port)stream_input_TREADY");
    sc_trace(mVcdFile, stream_input_TLAST, "(port)stream_input_TLAST");
    sc_trace(mVcdFile, stream_output_TDATA, "(port)stream_output_TDATA");
    sc_trace(mVcdFile, stream_output_TVALID, "(port)stream_output_TVALID");
    sc_trace(mVcdFile, stream_output_TREADY, "(port)stream_output_TREADY");
    sc_trace(mVcdFile, stream_output_TLAST, "(port)stream_output_TLAST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, input_size, "input_size");
    sc_trace(mVcdFile, input_number, "input_number");
    sc_trace(mVcdFile, filter_number, "filter_number");
    sc_trace(mVcdFile, stream_filter_TDATA_blk_n, "stream_filter_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln30_fu_553_p2, "icmp_ln30_fu_553_p2");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_118_p4, "tmp_nbreadreq_fu_118_p4");
    sc_trace(mVcdFile, stream_input_TDATA_blk_n, "stream_input_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, icmp_ln42_fu_669_p2, "icmp_ln42_fu_669_p2");
    sc_trace(mVcdFile, tmp_1_nbreadreq_fu_136_p4, "tmp_1_nbreadreq_fu_136_p4");
    sc_trace(mVcdFile, stream_output_TDATA_blk_n, "stream_output_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, icmp_ln63_fu_790_p2, "icmp_ln63_fu_790_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, filter_number_read_reg_975, "filter_number_read_reg_975");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, input_number_read_reg_981, "input_number_read_reg_981");
    sc_trace(mVcdFile, input_size_read_reg_987, "input_size_read_reg_987");
    sc_trace(mVcdFile, count_fu_430_p2, "count_fu_430_p2");
    sc_trace(mVcdFile, count_reg_997, "count_reg_997");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sext_ln32_fu_458_p1, "sext_ln32_fu_458_p1");
    sc_trace(mVcdFile, sext_ln32_reg_1002, "sext_ln32_reg_1002");
    sc_trace(mVcdFile, icmp_ln27_fu_425_p2, "icmp_ln27_fu_425_p2");
    sc_trace(mVcdFile, channel_fu_473_p2, "channel_fu_473_p2");
    sc_trace(mVcdFile, channel_reg_1017, "channel_reg_1017");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln32_1_fu_504_p2, "sub_ln32_1_fu_504_p2");
    sc_trace(mVcdFile, sub_ln32_1_reg_1022, "sub_ln32_1_reg_1022");
    sc_trace(mVcdFile, icmp_ln28_fu_467_p2, "icmp_ln28_fu_467_p2");
    sc_trace(mVcdFile, row_fu_516_p2, "row_fu_516_p2");
    sc_trace(mVcdFile, row_reg_1030, "row_reg_1030");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, sub_ln32_2_fu_547_p2, "sub_ln32_2_fu_547_p2");
    sc_trace(mVcdFile, sub_ln32_2_reg_1035, "sub_ln32_2_reg_1035");
    sc_trace(mVcdFile, icmp_ln29_fu_510_p2, "icmp_ln29_fu_510_p2");
    sc_trace(mVcdFile, col_fu_559_p2, "col_fu_559_p2");
    sc_trace(mVcdFile, ap_predicate_op104_read_state5, "ap_predicate_op104_read_state5");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, count_2_fu_602_p2, "count_2_fu_602_p2");
    sc_trace(mVcdFile, count_2_reg_1054, "count_2_reg_1054");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, map_boundary_fu_608_p2, "map_boundary_fu_608_p2");
    sc_trace(mVcdFile, map_boundary_reg_1059, "map_boundary_reg_1059");
    sc_trace(mVcdFile, icmp_ln39_fu_597_p2, "icmp_ln39_fu_597_p2");
    sc_trace(mVcdFile, channel_3_fu_619_p2, "channel_3_fu_619_p2");
    sc_trace(mVcdFile, channel_3_reg_1068, "channel_3_reg_1068");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_5_fu_625_p3, "tmp_5_fu_625_p3");
    sc_trace(mVcdFile, tmp_5_reg_1073, "tmp_5_reg_1073");
    sc_trace(mVcdFile, icmp_ln40_fu_613_p2, "icmp_ln40_fu_613_p2");
    sc_trace(mVcdFile, row_4_fu_642_p2, "row_4_fu_642_p2");
    sc_trace(mVcdFile, row_4_reg_1081, "row_4_reg_1081");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_8_cast_fu_661_p3, "tmp_8_cast_fu_661_p3");
    sc_trace(mVcdFile, tmp_8_cast_reg_1086, "tmp_8_cast_reg_1086");
    sc_trace(mVcdFile, icmp_ln41_fu_637_p2, "icmp_ln41_fu_637_p2");
    sc_trace(mVcdFile, col_3_fu_674_p2, "col_3_fu_674_p2");
    sc_trace(mVcdFile, ap_predicate_op148_read_state9, "ap_predicate_op148_read_state9");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, input_count_fu_717_p2, "input_count_fu_717_p2");
    sc_trace(mVcdFile, input_count_reg_1105, "input_count_reg_1105");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, regslice_both_stream_output_V_data_U_apdone_blk, "regslice_both_stream_output_V_data_U_apdone_blk");
    sc_trace(mVcdFile, filter_count_fu_732_p2, "filter_count_fu_732_p2");
    sc_trace(mVcdFile, filter_count_reg_1113, "filter_count_reg_1113");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, sext_ln67_fu_760_p1, "sext_ln67_fu_760_p1");
    sc_trace(mVcdFile, sext_ln67_reg_1118, "sext_ln67_reg_1118");
    sc_trace(mVcdFile, icmp_ln57_fu_727_p2, "icmp_ln57_fu_727_p2");
    sc_trace(mVcdFile, row_3_fu_773_p2, "row_3_fu_773_p2");
    sc_trace(mVcdFile, row_3_reg_1126, "row_3_reg_1126");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, col_4_fu_784_p2, "col_4_fu_784_p2");
    sc_trace(mVcdFile, col_4_reg_1134, "col_4_reg_1134");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, channel_4_fu_796_p2, "channel_4_fu_796_p2");
    sc_trace(mVcdFile, channel_4_reg_1142, "channel_4_reg_1142");
    sc_trace(mVcdFile, ap_block_state14_io, "ap_block_state14_io");
    sc_trace(mVcdFile, zext_ln67_4_fu_814_p1, "zext_ln67_4_fu_814_p1");
    sc_trace(mVcdFile, zext_ln67_4_reg_1147, "zext_ln67_4_reg_1147");
    sc_trace(mVcdFile, sub_ln67_1_fu_839_p2, "sub_ln67_1_fu_839_p2");
    sc_trace(mVcdFile, sub_ln67_1_reg_1152, "sub_ln67_1_reg_1152");
    sc_trace(mVcdFile, m_fu_855_p2, "m_fu_855_p2");
    sc_trace(mVcdFile, m_reg_1165, "m_reg_1165");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_13_cast_fu_880_p3, "tmp_13_cast_fu_880_p3");
    sc_trace(mVcdFile, tmp_13_cast_reg_1170, "tmp_13_cast_reg_1170");
    sc_trace(mVcdFile, icmp_ln65_fu_849_p2, "icmp_ln65_fu_849_p2");
    sc_trace(mVcdFile, sub_ln67_2_fu_913_p2, "sub_ln67_2_fu_913_p2");
    sc_trace(mVcdFile, sub_ln67_2_reg_1175, "sub_ln67_2_reg_1175");
    sc_trace(mVcdFile, n_fu_925_p2, "n_fu_925_p2");
    sc_trace(mVcdFile, n_reg_1183, "n_reg_1183");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, icmp_ln66_fu_919_p2, "icmp_ln66_fu_919_p2");
    sc_trace(mVcdFile, input_0_q0, "input_0_q0");
    sc_trace(mVcdFile, input_0_load_reg_1198, "input_0_load_reg_1198");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, filter_q0, "filter_q0");
    sc_trace(mVcdFile, filter_load_reg_1203, "filter_load_reg_1203");
    sc_trace(mVcdFile, grp_fu_414_p2, "grp_fu_414_p2");
    sc_trace(mVcdFile, tmp_6_reg_1208, "tmp_6_reg_1208");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_407_p2, "grp_fu_407_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, input_0_address0, "input_0_address0");
    sc_trace(mVcdFile, input_0_ce0, "input_0_ce0");
    sc_trace(mVcdFile, input_0_we0, "input_0_we0");
    sc_trace(mVcdFile, filter_address0, "filter_address0");
    sc_trace(mVcdFile, filter_ce0, "filter_ce0");
    sc_trace(mVcdFile, filter_we0, "filter_we0");
    sc_trace(mVcdFile, count_0_reg_202, "count_0_reg_202");
    sc_trace(mVcdFile, channel_0_reg_213, "channel_0_reg_213");
    sc_trace(mVcdFile, row_0_reg_224, "row_0_reg_224");
    sc_trace(mVcdFile, col_0_reg_235, "col_0_reg_235");
    sc_trace(mVcdFile, count_1_reg_246, "count_1_reg_246");
    sc_trace(mVcdFile, channel_1_reg_257, "channel_1_reg_257");
    sc_trace(mVcdFile, row_1_reg_268, "row_1_reg_268");
    sc_trace(mVcdFile, col_1_reg_279, "col_1_reg_279");
    sc_trace(mVcdFile, input_count_0_reg_290, "input_count_0_reg_290");
    sc_trace(mVcdFile, filter_count_0_reg_301, "filter_count_0_reg_301");
    sc_trace(mVcdFile, icmp_ln60_fu_768_p2, "icmp_ln60_fu_768_p2");
    sc_trace(mVcdFile, icmp_ln56_fu_712_p2, "icmp_ln56_fu_712_p2");
    sc_trace(mVcdFile, row_2_reg_312, "row_2_reg_312");
    sc_trace(mVcdFile, icmp_ln61_fu_779_p2, "icmp_ln61_fu_779_p2");
    sc_trace(mVcdFile, col_2_reg_324, "col_2_reg_324");
    sc_trace(mVcdFile, channel_2_reg_336, "channel_2_reg_336");
    sc_trace(mVcdFile, axi_tmp_data_reg_347, "axi_tmp_data_reg_347");
    sc_trace(mVcdFile, m_0_reg_361, "m_0_reg_361");
    sc_trace(mVcdFile, x_0_reg_372, "x_0_reg_372");
    sc_trace(mVcdFile, n_0_reg_384, "n_0_reg_384");
    sc_trace(mVcdFile, x_1_reg_395, "x_1_reg_395");
    sc_trace(mVcdFile, zext_ln32_5_fu_583_p1, "zext_ln32_5_fu_583_p1");
    sc_trace(mVcdFile, zext_ln44_1_fu_698_p1, "zext_ln44_1_fu_698_p1");
    sc_trace(mVcdFile, zext_ln67_7_fu_950_p1, "zext_ln67_7_fu_950_p1");
    sc_trace(mVcdFile, zext_ln67_9_fu_964_p1, "zext_ln67_9_fu_964_p1");
    sc_trace(mVcdFile, tmp_last_fu_84, "tmp_last_fu_84");
    sc_trace(mVcdFile, tmp_last_1_fu_96, "tmp_last_1_fu_96");
    sc_trace(mVcdFile, grp_fu_407_p0, "grp_fu_407_p0");
    sc_trace(mVcdFile, grp_fu_407_p1, "grp_fu_407_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, zext_ln27_fu_421_p1, "zext_ln27_fu_421_p1");
    sc_trace(mVcdFile, tmp_2_fu_440_p3, "tmp_2_fu_440_p3");
    sc_trace(mVcdFile, zext_ln32_1_fu_448_p1, "zext_ln32_1_fu_448_p1");
    sc_trace(mVcdFile, zext_ln32_fu_436_p1, "zext_ln32_fu_436_p1");
    sc_trace(mVcdFile, sub_ln32_fu_452_p2, "sub_ln32_fu_452_p2");
    sc_trace(mVcdFile, zext_ln32_3_fu_479_p1, "zext_ln32_3_fu_479_p1");
    sc_trace(mVcdFile, add_ln32_fu_483_p2, "add_ln32_fu_483_p2");
    sc_trace(mVcdFile, tmp_3_fu_492_p3, "tmp_3_fu_492_p3");
    sc_trace(mVcdFile, sext_ln32_2_fu_500_p1, "sext_ln32_2_fu_500_p1");
    sc_trace(mVcdFile, sext_ln32_1_fu_488_p1, "sext_ln32_1_fu_488_p1");
    sc_trace(mVcdFile, zext_ln32_2_fu_522_p1, "zext_ln32_2_fu_522_p1");
    sc_trace(mVcdFile, add_ln32_1_fu_526_p2, "add_ln32_1_fu_526_p2");
    sc_trace(mVcdFile, trunc_ln32_1_fu_535_p1, "trunc_ln32_1_fu_535_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_539_p3, "p_shl2_cast_fu_539_p3");
    sc_trace(mVcdFile, trunc_ln32_fu_531_p1, "trunc_ln32_fu_531_p1");
    sc_trace(mVcdFile, zext_ln32_4_fu_574_p1, "zext_ln32_4_fu_574_p1");
    sc_trace(mVcdFile, add_ln32_2_fu_578_p2, "add_ln32_2_fu_578_p2");
    sc_trace(mVcdFile, zext_ln39_fu_593_p1, "zext_ln39_fu_593_p1");
    sc_trace(mVcdFile, zext_ln41_fu_633_p1, "zext_ln41_fu_633_p1");
    sc_trace(mVcdFile, zext_ln44_fu_652_p1, "zext_ln44_fu_652_p1");
    sc_trace(mVcdFile, trunc_ln44_fu_648_p1, "trunc_ln44_fu_648_p1");
    sc_trace(mVcdFile, add_ln44_fu_655_p2, "add_ln44_fu_655_p2");
    sc_trace(mVcdFile, trunc_ln44_1_fu_689_p1, "trunc_ln44_1_fu_689_p1");
    sc_trace(mVcdFile, add_ln44_1_fu_693_p2, "add_ln44_1_fu_693_p2");
    sc_trace(mVcdFile, zext_ln56_fu_708_p1, "zext_ln56_fu_708_p1");
    sc_trace(mVcdFile, zext_ln57_fu_723_p1, "zext_ln57_fu_723_p1");
    sc_trace(mVcdFile, tmp_9_fu_742_p3, "tmp_9_fu_742_p3");
    sc_trace(mVcdFile, zext_ln67_1_fu_750_p1, "zext_ln67_1_fu_750_p1");
    sc_trace(mVcdFile, zext_ln67_fu_738_p1, "zext_ln67_fu_738_p1");
    sc_trace(mVcdFile, sub_ln67_fu_754_p2, "sub_ln67_fu_754_p2");
    sc_trace(mVcdFile, zext_ln60_fu_764_p1, "zext_ln60_fu_764_p1");
    sc_trace(mVcdFile, tmp_s_fu_806_p3, "tmp_s_fu_806_p3");
    sc_trace(mVcdFile, zext_ln67_3_fu_802_p1, "zext_ln67_3_fu_802_p1");
    sc_trace(mVcdFile, add_ln67_fu_818_p2, "add_ln67_fu_818_p2");
    sc_trace(mVcdFile, tmp_4_fu_827_p3, "tmp_4_fu_827_p3");
    sc_trace(mVcdFile, sext_ln67_2_fu_835_p1, "sext_ln67_2_fu_835_p1");
    sc_trace(mVcdFile, sext_ln67_1_fu_823_p1, "sext_ln67_1_fu_823_p1");
    sc_trace(mVcdFile, trunc_ln67_fu_865_p1, "trunc_ln67_fu_865_p1");
    sc_trace(mVcdFile, zext_ln67_5_fu_861_p1, "zext_ln67_5_fu_861_p1");
    sc_trace(mVcdFile, add_ln67_1_fu_869_p2, "add_ln67_1_fu_869_p2");
    sc_trace(mVcdFile, add_ln67_2_fu_875_p2, "add_ln67_2_fu_875_p2");
    sc_trace(mVcdFile, zext_ln67_2_fu_888_p1, "zext_ln67_2_fu_888_p1");
    sc_trace(mVcdFile, add_ln67_3_fu_892_p2, "add_ln67_3_fu_892_p2");
    sc_trace(mVcdFile, trunc_ln67_2_fu_901_p1, "trunc_ln67_2_fu_901_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_905_p3, "p_shl5_cast_fu_905_p3");
    sc_trace(mVcdFile, trunc_ln67_1_fu_897_p1, "trunc_ln67_1_fu_897_p1");
    sc_trace(mVcdFile, trunc_ln67_3_fu_935_p1, "trunc_ln67_3_fu_935_p1");
    sc_trace(mVcdFile, zext_ln67_6_fu_931_p1, "zext_ln67_6_fu_931_p1");
    sc_trace(mVcdFile, add_ln67_4_fu_939_p2, "add_ln67_4_fu_939_p2");
    sc_trace(mVcdFile, add_ln67_5_fu_945_p2, "add_ln67_5_fu_945_p2");
    sc_trace(mVcdFile, zext_ln67_8_fu_955_p1, "zext_ln67_8_fu_955_p1");
    sc_trace(mVcdFile, add_ln67_6_fu_959_p2, "add_ln67_6_fu_959_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, stream_output_TVALID_int, "stream_output_TVALID_int");
    sc_trace(mVcdFile, stream_output_TREADY_int, "stream_output_TREADY_int");
    sc_trace(mVcdFile, regslice_both_stream_output_V_data_U_vld_out, "regslice_both_stream_output_V_data_U_vld_out");
    sc_trace(mVcdFile, regslice_both_w1_stream_output_V_last_U_apdone_blk, "regslice_both_w1_stream_output_V_last_U_apdone_blk");
    sc_trace(mVcdFile, stream_output_TLAST_int, "stream_output_TLAST_int");
    sc_trace(mVcdFile, regslice_both_w1_stream_output_V_last_U_ack_in_dummy, "regslice_both_w1_stream_output_V_last_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_w1_stream_output_V_last_U_vld_out, "regslice_both_w1_stream_output_V_last_U_vld_out");
#endif

    }
    mHdltvinHandle.open("conv2d.hdltvin.dat");
    mHdltvoutHandle.open("conv2d.hdltvout.dat");
}

conv2d::~conv2d() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete conv2d_AXILiteS_s_axi_U;
    delete input_0_U;
    delete filter_U;
    delete conv2d_fadd_32ns_bkb_U1;
    delete conv2d_fmul_32ns_cud_U2;
    delete regslice_both_stream_output_V_data_U;
    delete regslice_both_w1_stream_output_V_last_U;
}

void conv2d::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void conv2d::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln61_fu_779_p2.read()))) {
        axi_tmp_data_reg_347 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        axi_tmp_data_reg_347 = grp_fu_407_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln29_fu_510_p2.read()))) {
        channel_0_reg_213 = channel_reg_1017.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_425_p2.read()))) {
        channel_0_reg_213 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln39_fu_597_p2.read()))) {
        channel_1_reg_257 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_fu_637_p2.read()))) {
        channel_1_reg_257 = channel_3_reg_1068.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln61_fu_779_p2.read()))) {
        channel_2_reg_336 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        channel_2_reg_336 = channel_4_reg_1142.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_510_p2.read()))) {
        col_0_reg_235 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln30_fu_553_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_nbreadreq_fu_118_p4.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, stream_filter_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read())))) {
        col_0_reg_235 = col_fu_559_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln41_fu_637_p2.read()))) {
        col_1_reg_279 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_669_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_136_p4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, stream_input_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read())))) {
        col_1_reg_279 = col_3_fu_674_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln60_fu_768_p2.read()))) {
        col_2_reg_324 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
                esl_seteq<1,1,1>(stream_output_TREADY_int.read(), ap_const_logic_1))) {
        col_2_reg_324 = col_4_reg_1134.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_fu_467_p2.read()))) {
        count_0_reg_202 = count_reg_997.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        count_0_reg_202 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln40_fu_613_p2.read()))) {
        count_1_reg_246 = count_2_reg_1054.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_425_p2.read()))) {
        count_1_reg_246 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(regslice_both_stream_output_V_data_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_fu_712_p2.read()))) {
        filter_count_0_reg_301 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_fu_768_p2.read()))) {
        filter_count_0_reg_301 = filter_count_reg_1113.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln57_fu_727_p2.read()))) {
        input_count_0_reg_290 = input_count_reg_1105.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_597_p2.read()))) {
        input_count_0_reg_290 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln66_fu_919_p2.read()))) {
        m_0_reg_361 = m_reg_1165.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_block_state14_io.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_790_p2.read()))) {
        m_0_reg_361 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_849_p2.read()))) {
        n_0_reg_384 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        n_0_reg_384 = n_reg_1183.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_fu_467_p2.read()))) {
        row_0_reg_224 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, stream_filter_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read())) && 
                (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_118_p4.read()) || 
                 esl_seteq<1,1,1>(icmp_ln30_fu_553_p2.read(), ap_const_lv1_1)))) {
        row_0_reg_224 = row_reg_1030.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_613_p2.read()))) {
        row_1_reg_268 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, stream_input_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read())) && 
                (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_nbreadreq_fu_136_p4.read()) || 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln42_fu_669_p2.read())))) {
        row_1_reg_268 = row_4_reg_1081.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln61_fu_779_p2.read()))) {
        row_2_reg_312 = row_3_reg_1126.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln57_fu_727_p2.read()))) {
        row_2_reg_312 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_669_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_136_p4.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, stream_input_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read())))) {
        tmp_last_1_fu_96 =  (sc_lv<1>) (stream_input_TLAST.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_425_p2.read()))) {
        tmp_last_1_fu_96 = tmp_last_fu_84.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln66_fu_919_p2.read()))) {
        x_0_reg_372 = x_1_reg_395.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_block_state14_io.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_790_p2.read()))) {
        x_0_reg_372 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_849_p2.read()))) {
        x_1_reg_395 = x_0_reg_372.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        x_1_reg_395 = grp_fu_407_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        channel_3_reg_1068 = channel_3_fu_619_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_block_state14_io.read(), ap_const_boolean_0))) {
        channel_4_reg_1142 = channel_4_fu_796_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        channel_reg_1017 = channel_fu_473_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        col_4_reg_1134 = col_4_fu_784_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        count_2_reg_1054 = count_2_fu_602_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        count_reg_997 = count_fu_430_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        filter_count_reg_1113 = filter_count_fu_732_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        filter_load_reg_1203 = filter_q0.read();
        input_0_load_reg_1198 = input_0_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        filter_number_read_reg_975 = filter_number.read();
        input_number_read_reg_981 = input_number.read();
        input_size_read_reg_987 = input_size.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(regslice_both_stream_output_V_data_U_apdone_blk.read(), ap_const_logic_0))) {
        input_count_reg_1105 = input_count_fu_717_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        m_reg_1165 = m_fu_855_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_597_p2.read()))) {
        map_boundary_reg_1059 = map_boundary_fu_608_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        n_reg_1183 = n_fu_925_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        row_3_reg_1126 = row_3_fu_773_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        row_4_reg_1081 = row_4_fu_642_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        row_reg_1030 = row_fu_516_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_425_p2.read()))) {
        sext_ln32_reg_1002 = sext_ln32_fu_458_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln57_fu_727_p2.read()))) {
        sext_ln67_reg_1118 = sext_ln67_fu_760_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_fu_467_p2.read()))) {
        sub_ln32_1_reg_1022 = sub_ln32_1_fu_504_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_510_p2.read()))) {
        sub_ln32_2_reg_1035 = sub_ln32_2_fu_547_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_block_state14_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_790_p2.read()))) {
        sub_ln67_1_reg_1152 = sub_ln67_1_fu_839_p2.read();
        zext_ln67_4_reg_1147 = zext_ln67_4_fu_814_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_849_p2.read()))) {
        sub_ln67_2_reg_1175 = sub_ln67_2_fu_913_p2.read();
        tmp_13_cast_reg_1170 = tmp_13_cast_fu_880_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_fu_613_p2.read()))) {
        tmp_5_reg_1073 = tmp_5_fu_625_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_6_reg_1208 = grp_fu_414_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln41_fu_637_p2.read()))) {
        tmp_8_cast_reg_1086 = tmp_8_cast_fu_661_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_553_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_118_p4.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, stream_filter_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read())))) {
        tmp_last_fu_84 =  (sc_lv<1>) (stream_filter_TLAST.read());
    }
}

void conv2d::thread_add_ln32_1_fu_526_p2() {
    add_ln32_1_fu_526_p2 = (!sub_ln32_1_reg_1022.read().is_01() || !zext_ln32_2_fu_522_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(sub_ln32_1_reg_1022.read()) + sc_biguint<64>(zext_ln32_2_fu_522_p1.read()));
}

void conv2d::thread_add_ln32_2_fu_578_p2() {
    add_ln32_2_fu_578_p2 = (!sub_ln32_2_reg_1035.read().is_01() || !zext_ln32_4_fu_574_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(sub_ln32_2_reg_1035.read()) + sc_biguint<8>(zext_ln32_4_fu_574_p1.read()));
}

void conv2d::thread_add_ln32_fu_483_p2() {
    add_ln32_fu_483_p2 = (!sext_ln32_reg_1002.read().is_01() || !zext_ln32_3_fu_479_p1.read().is_01())? sc_lv<35>(): (sc_bigint<35>(sext_ln32_reg_1002.read()) + sc_biguint<35>(zext_ln32_3_fu_479_p1.read()));
}

void conv2d::thread_add_ln44_1_fu_693_p2() {
    add_ln44_1_fu_693_p2 = (!tmp_8_cast_reg_1086.read().is_01() || !trunc_ln44_1_fu_689_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_8_cast_reg_1086.read()) + sc_biguint<15>(trunc_ln44_1_fu_689_p1.read()));
}

void conv2d::thread_add_ln44_fu_655_p2() {
    add_ln44_fu_655_p2 = (!zext_ln44_fu_652_p1.read().is_01() || !trunc_ln44_fu_648_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln44_fu_652_p1.read()) + sc_biguint<9>(trunc_ln44_fu_648_p1.read()));
}

void conv2d::thread_add_ln67_1_fu_869_p2() {
    add_ln67_1_fu_869_p2 = (!trunc_ln67_fu_865_p1.read().is_01() || !zext_ln67_5_fu_861_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(trunc_ln67_fu_865_p1.read()) + sc_biguint<9>(zext_ln67_5_fu_861_p1.read()));
}

void conv2d::thread_add_ln67_2_fu_875_p2() {
    add_ln67_2_fu_875_p2 = (!add_ln67_1_fu_869_p2.read().is_01() || !zext_ln67_4_reg_1147.read().is_01())? sc_lv<9>(): (sc_biguint<9>(add_ln67_1_fu_869_p2.read()) + sc_biguint<9>(zext_ln67_4_reg_1147.read()));
}

void conv2d::thread_add_ln67_3_fu_892_p2() {
    add_ln67_3_fu_892_p2 = (!zext_ln67_2_fu_888_p1.read().is_01() || !sub_ln67_1_reg_1152.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln67_2_fu_888_p1.read()) + sc_biguint<64>(sub_ln67_1_reg_1152.read()));
}

void conv2d::thread_add_ln67_4_fu_939_p2() {
    add_ln67_4_fu_939_p2 = (!trunc_ln67_3_fu_935_p1.read().is_01() || !zext_ln67_6_fu_931_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(trunc_ln67_3_fu_935_p1.read()) + sc_biguint<15>(zext_ln67_6_fu_931_p1.read()));
}

void conv2d::thread_add_ln67_5_fu_945_p2() {
    add_ln67_5_fu_945_p2 = (!add_ln67_4_fu_939_p2.read().is_01() || !tmp_13_cast_reg_1170.read().is_01())? sc_lv<15>(): (sc_biguint<15>(add_ln67_4_fu_939_p2.read()) + sc_biguint<15>(tmp_13_cast_reg_1170.read()));
}

void conv2d::thread_add_ln67_6_fu_959_p2() {
    add_ln67_6_fu_959_p2 = (!zext_ln67_8_fu_955_p1.read().is_01() || !sub_ln67_2_reg_1175.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln67_8_fu_955_p1.read()) + sc_biguint<8>(sub_ln67_2_reg_1175.read()));
}

void conv2d::thread_add_ln67_fu_818_p2() {
    add_ln67_fu_818_p2 = (!zext_ln67_3_fu_802_p1.read().is_01() || !sext_ln67_reg_1118.read().is_01())? sc_lv<35>(): (sc_biguint<35>(zext_ln67_3_fu_802_p1.read()) + sc_bigint<35>(sext_ln67_reg_1118.read()));
}

void conv2d::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv2d::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void conv2d::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void conv2d::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void conv2d::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void conv2d::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void conv2d::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void conv2d::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void conv2d::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void conv2d::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void conv2d::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv2d::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void conv2d::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void conv2d::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void conv2d::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv2d::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void conv2d::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void conv2d::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv2d::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv2d::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv2d::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv2d::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void conv2d::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void conv2d::thread_ap_block_state14_io() {
    ap_block_state14_io = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_fu_790_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_output_TREADY_int.read()));
}

void conv2d::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_logic_0, stream_filter_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read()));
}

void conv2d::thread_ap_block_state9() {
    ap_block_state9 = (esl_seteq<1,1,1>(ap_const_logic_0, stream_input_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read()));
}

void conv2d::thread_ap_predicate_op104_read_state5() {
    ap_predicate_op104_read_state5 = (esl_seteq<1,1,1>(icmp_ln30_fu_553_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_118_p4.read(), ap_const_lv1_1));
}

void conv2d::thread_ap_predicate_op148_read_state9() {
    ap_predicate_op148_read_state9 = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_669_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_136_p4.read()));
}

void conv2d::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void conv2d::thread_channel_3_fu_619_p2() {
    channel_3_fu_619_p2 = (!channel_1_reg_257.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(channel_1_reg_257.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv2d::thread_channel_4_fu_796_p2() {
    channel_4_fu_796_p2 = (!channel_2_reg_336.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(channel_2_reg_336.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv2d::thread_channel_fu_473_p2() {
    channel_fu_473_p2 = (!channel_0_reg_213.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(channel_0_reg_213.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv2d::thread_col_3_fu_674_p2() {
    col_3_fu_674_p2 = (!col_1_reg_279.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(col_1_reg_279.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void conv2d::thread_col_4_fu_784_p2() {
    col_4_fu_784_p2 = (!col_2_reg_324.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(col_2_reg_324.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void conv2d::thread_col_fu_559_p2() {
    col_fu_559_p2 = (!col_0_reg_235.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(col_0_reg_235.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv2d::thread_count_2_fu_602_p2() {
    count_2_fu_602_p2 = (!count_1_reg_246.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(count_1_reg_246.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void conv2d::thread_count_fu_430_p2() {
    count_fu_430_p2 = (!count_0_reg_202.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(count_0_reg_202.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void conv2d::thread_filter_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        filter_address0 =  (sc_lv<7>) (zext_ln67_9_fu_964_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        filter_address0 =  (sc_lv<7>) (zext_ln32_5_fu_583_p1.read());
    } else {
        filter_address0 = "XXXXXXX";
    }
}

void conv2d::thread_filter_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, stream_filter_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        filter_ce0 = ap_const_logic_1;
    } else {
        filter_ce0 = ap_const_logic_0;
    }
}

void conv2d::thread_filter_count_fu_732_p2() {
    filter_count_fu_732_p2 = (!filter_count_0_reg_301.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(filter_count_0_reg_301.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void conv2d::thread_filter_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_553_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_118_p4.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, stream_filter_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read())))) {
        filter_we0 = ap_const_logic_1;
    } else {
        filter_we0 = ap_const_logic_0;
    }
}

void conv2d::thread_grp_fu_407_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_407_p0 = x_1_reg_395.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_407_p0 = axi_tmp_data_reg_347.read();
    } else {
        grp_fu_407_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void conv2d::thread_grp_fu_407_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_407_p1 = tmp_6_reg_1208.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_407_p1 = x_0_reg_372.read();
    } else {
        grp_fu_407_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void conv2d::thread_icmp_ln27_fu_425_p2() {
    icmp_ln27_fu_425_p2 = (!zext_ln27_fu_421_p1.read().is_01() || !filter_number_read_reg_975.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln27_fu_421_p1.read()) < sc_bigint<32>(filter_number_read_reg_975.read()));
}

void conv2d::thread_icmp_ln28_fu_467_p2() {
    icmp_ln28_fu_467_p2 = (!channel_0_reg_213.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(channel_0_reg_213.read() == ap_const_lv2_3);
}

void conv2d::thread_icmp_ln29_fu_510_p2() {
    icmp_ln29_fu_510_p2 = (!row_0_reg_224.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(row_0_reg_224.read() == ap_const_lv2_3);
}

void conv2d::thread_icmp_ln30_fu_553_p2() {
    icmp_ln30_fu_553_p2 = (!col_0_reg_235.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(col_0_reg_235.read() == ap_const_lv2_3);
}

void conv2d::thread_icmp_ln39_fu_597_p2() {
    icmp_ln39_fu_597_p2 = (!zext_ln39_fu_593_p1.read().is_01() || !input_number_read_reg_981.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln39_fu_593_p1.read()) < sc_bigint<32>(input_number_read_reg_981.read()));
}

void conv2d::thread_icmp_ln40_fu_613_p2() {
    icmp_ln40_fu_613_p2 = (!channel_1_reg_257.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(channel_1_reg_257.read() == ap_const_lv2_3);
}

void conv2d::thread_icmp_ln41_fu_637_p2() {
    icmp_ln41_fu_637_p2 = (!zext_ln41_fu_633_p1.read().is_01() || !input_size_read_reg_987.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln41_fu_633_p1.read()) < sc_bigint<32>(input_size_read_reg_987.read()));
}

void conv2d::thread_icmp_ln42_fu_669_p2() {
    icmp_ln42_fu_669_p2 = (!col_1_reg_279.read().is_01() || !input_size_read_reg_987.read().is_01())? sc_lv<1>(): (sc_bigint<32>(col_1_reg_279.read()) < sc_bigint<32>(input_size_read_reg_987.read()));
}

void conv2d::thread_icmp_ln56_fu_712_p2() {
    icmp_ln56_fu_712_p2 = (!zext_ln56_fu_708_p1.read().is_01() || !input_number_read_reg_981.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln56_fu_708_p1.read()) < sc_bigint<32>(input_number_read_reg_981.read()));
}

void conv2d::thread_icmp_ln57_fu_727_p2() {
    icmp_ln57_fu_727_p2 = (!zext_ln57_fu_723_p1.read().is_01() || !filter_number_read_reg_975.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln57_fu_723_p1.read()) < sc_bigint<32>(filter_number_read_reg_975.read()));
}

void conv2d::thread_icmp_ln60_fu_768_p2() {
    icmp_ln60_fu_768_p2 = (!zext_ln60_fu_764_p1.read().is_01() || !map_boundary_reg_1059.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln60_fu_764_p1.read()) < sc_bigint<32>(map_boundary_reg_1059.read()));
}

void conv2d::thread_icmp_ln61_fu_779_p2() {
    icmp_ln61_fu_779_p2 = (!col_2_reg_324.read().is_01() || !map_boundary_reg_1059.read().is_01())? sc_lv<1>(): sc_lv<1>(col_2_reg_324.read() == map_boundary_reg_1059.read());
}

void conv2d::thread_icmp_ln63_fu_790_p2() {
    icmp_ln63_fu_790_p2 = (!channel_2_reg_336.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(channel_2_reg_336.read() == ap_const_lv2_3);
}

void conv2d::thread_icmp_ln65_fu_849_p2() {
    icmp_ln65_fu_849_p2 = (!m_0_reg_361.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_361.read() == ap_const_lv2_3);
}

void conv2d::thread_icmp_ln66_fu_919_p2() {
    icmp_ln66_fu_919_p2 = (!n_0_reg_384.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(n_0_reg_384.read() == ap_const_lv2_3);
}

void conv2d::thread_input_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        input_0_address0 =  (sc_lv<14>) (zext_ln67_7_fu_950_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        input_0_address0 =  (sc_lv<14>) (zext_ln44_1_fu_698_p1.read());
    } else {
        input_0_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void conv2d::thread_input_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, stream_input_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        input_0_ce0 = ap_const_logic_1;
    } else {
        input_0_ce0 = ap_const_logic_0;
    }
}

void conv2d::thread_input_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_669_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_136_p4.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, stream_input_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read())))) {
        input_0_we0 = ap_const_logic_1;
    } else {
        input_0_we0 = ap_const_logic_0;
    }
}

void conv2d::thread_input_count_fu_717_p2() {
    input_count_fu_717_p2 = (!input_count_0_reg_290.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(input_count_0_reg_290.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void conv2d::thread_m_fu_855_p2() {
    m_fu_855_p2 = (!m_0_reg_361.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_0_reg_361.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv2d::thread_map_boundary_fu_608_p2() {
    map_boundary_fu_608_p2 = (!input_size_read_reg_987.read().is_01() || !ap_const_lv32_FFFFFFFE.is_01())? sc_lv<32>(): (sc_biguint<32>(input_size_read_reg_987.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFE));
}

void conv2d::thread_n_fu_925_p2() {
    n_fu_925_p2 = (!n_0_reg_384.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(n_0_reg_384.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv2d::thread_p_shl2_cast_fu_539_p3() {
    p_shl2_cast_fu_539_p3 = esl_concat<6,2>(trunc_ln32_1_fu_535_p1.read(), ap_const_lv2_0);
}

void conv2d::thread_p_shl5_cast_fu_905_p3() {
    p_shl5_cast_fu_905_p3 = esl_concat<6,2>(trunc_ln67_2_fu_901_p1.read(), ap_const_lv2_0);
}

void conv2d::thread_row_3_fu_773_p2() {
    row_3_fu_773_p2 = (!row_2_reg_312.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(row_2_reg_312.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void conv2d::thread_row_4_fu_642_p2() {
    row_4_fu_642_p2 = (!row_1_reg_268.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(row_1_reg_268.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void conv2d::thread_row_fu_516_p2() {
    row_fu_516_p2 = (!row_0_reg_224.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(row_0_reg_224.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv2d::thread_sext_ln32_1_fu_488_p1() {
    sext_ln32_1_fu_488_p1 = esl_sext<64,35>(add_ln32_fu_483_p2.read());
}

void conv2d::thread_sext_ln32_2_fu_500_p1() {
    sext_ln32_2_fu_500_p1 = esl_sext<64,37>(tmp_3_fu_492_p3.read());
}

void conv2d::thread_sext_ln32_fu_458_p1() {
    sext_ln32_fu_458_p1 = esl_sext<35,34>(sub_ln32_fu_452_p2.read());
}

void conv2d::thread_sext_ln67_1_fu_823_p1() {
    sext_ln67_1_fu_823_p1 = esl_sext<64,35>(add_ln67_fu_818_p2.read());
}

void conv2d::thread_sext_ln67_2_fu_835_p1() {
    sext_ln67_2_fu_835_p1 = esl_sext<64,37>(tmp_4_fu_827_p3.read());
}

void conv2d::thread_sext_ln67_fu_760_p1() {
    sext_ln67_fu_760_p1 = esl_sext<35,34>(sub_ln67_fu_754_p2.read());
}

void conv2d::thread_stream_filter_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_553_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_118_p4.read(), ap_const_lv1_1))) {
        stream_filter_TDATA_blk_n = stream_filter_TVALID.read();
    } else {
        stream_filter_TDATA_blk_n = ap_const_logic_1;
    }
}

void conv2d::thread_stream_filter_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, stream_filter_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read())))) {
        stream_filter_TREADY = ap_const_logic_1;
    } else {
        stream_filter_TREADY = ap_const_logic_0;
    }
}

void conv2d::thread_stream_input_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_669_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_136_p4.read()))) {
        stream_input_TDATA_blk_n = stream_input_TVALID.read();
    } else {
        stream_input_TDATA_blk_n = ap_const_logic_1;
    }
}

void conv2d::thread_stream_input_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, stream_input_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read())))) {
        stream_input_TREADY = ap_const_logic_1;
    } else {
        stream_input_TREADY = ap_const_logic_0;
    }
}

void conv2d::thread_stream_output_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_fu_790_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        stream_output_TDATA_blk_n = stream_output_TREADY_int.read();
    } else {
        stream_output_TDATA_blk_n = ap_const_logic_1;
    }
}

void conv2d::thread_stream_output_TLAST_int() {
    stream_output_TLAST_int =  (sc_logic) (tmp_last_1_fu_96.read()[0]);
}

void conv2d::thread_stream_output_TVALID() {
    stream_output_TVALID = regslice_both_stream_output_V_data_U_vld_out.read();
}

void conv2d::thread_stream_output_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_fu_790_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state14_io.read(), ap_const_boolean_0))) {
        stream_output_TVALID_int = ap_const_logic_1;
    } else {
        stream_output_TVALID_int = ap_const_logic_0;
    }
}

void conv2d::thread_sub_ln32_1_fu_504_p2() {
    sub_ln32_1_fu_504_p2 = (!sext_ln32_2_fu_500_p1.read().is_01() || !sext_ln32_1_fu_488_p1.read().is_01())? sc_lv<64>(): (sc_bigint<64>(sext_ln32_2_fu_500_p1.read()) - sc_bigint<64>(sext_ln32_1_fu_488_p1.read()));
}

void conv2d::thread_sub_ln32_2_fu_547_p2() {
    sub_ln32_2_fu_547_p2 = (!p_shl2_cast_fu_539_p3.read().is_01() || !trunc_ln32_fu_531_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl2_cast_fu_539_p3.read()) - sc_biguint<8>(trunc_ln32_fu_531_p1.read()));
}

void conv2d::thread_sub_ln32_fu_452_p2() {
    sub_ln32_fu_452_p2 = (!zext_ln32_1_fu_448_p1.read().is_01() || !zext_ln32_fu_436_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln32_1_fu_448_p1.read()) - sc_biguint<34>(zext_ln32_fu_436_p1.read()));
}

void conv2d::thread_sub_ln67_1_fu_839_p2() {
    sub_ln67_1_fu_839_p2 = (!sext_ln67_2_fu_835_p1.read().is_01() || !sext_ln67_1_fu_823_p1.read().is_01())? sc_lv<64>(): (sc_bigint<64>(sext_ln67_2_fu_835_p1.read()) - sc_bigint<64>(sext_ln67_1_fu_823_p1.read()));
}

void conv2d::thread_sub_ln67_2_fu_913_p2() {
    sub_ln67_2_fu_913_p2 = (!p_shl5_cast_fu_905_p3.read().is_01() || !trunc_ln67_1_fu_897_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl5_cast_fu_905_p3.read()) - sc_biguint<8>(trunc_ln67_1_fu_897_p1.read()));
}

void conv2d::thread_sub_ln67_fu_754_p2() {
    sub_ln67_fu_754_p2 = (!zext_ln67_1_fu_750_p1.read().is_01() || !zext_ln67_fu_738_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln67_1_fu_750_p1.read()) - sc_biguint<34>(zext_ln67_fu_738_p1.read()));
}

void conv2d::thread_tmp_13_cast_fu_880_p3() {
    tmp_13_cast_fu_880_p3 = esl_concat<9,6>(add_ln67_2_fu_875_p2.read(), ap_const_lv6_0);
}

void conv2d::thread_tmp_1_nbreadreq_fu_136_p4() {
    tmp_1_nbreadreq_fu_136_p4 =  (sc_lv<1>) ((stream_input_TVALID.read()));
}

void conv2d::thread_tmp_2_fu_440_p3() {
    tmp_2_fu_440_p3 = esl_concat<31,2>(count_0_reg_202.read(), ap_const_lv2_0);
}

void conv2d::thread_tmp_3_fu_492_p3() {
    tmp_3_fu_492_p3 = esl_concat<35,2>(add_ln32_fu_483_p2.read(), ap_const_lv2_0);
}

void conv2d::thread_tmp_4_fu_827_p3() {
    tmp_4_fu_827_p3 = esl_concat<35,2>(add_ln67_fu_818_p2.read(), ap_const_lv2_0);
}

void conv2d::thread_tmp_5_fu_625_p3() {
    tmp_5_fu_625_p3 = esl_concat<2,6>(channel_1_reg_257.read(), ap_const_lv6_0);
}

void conv2d::thread_tmp_8_cast_fu_661_p3() {
    tmp_8_cast_fu_661_p3 = esl_concat<9,6>(add_ln44_fu_655_p2.read(), ap_const_lv6_0);
}

void conv2d::thread_tmp_9_fu_742_p3() {
    tmp_9_fu_742_p3 = esl_concat<31,2>(filter_count_0_reg_301.read(), ap_const_lv2_0);
}

void conv2d::thread_tmp_nbreadreq_fu_118_p4() {
    tmp_nbreadreq_fu_118_p4 =  (sc_lv<1>) ((stream_filter_TVALID.read()));
}

void conv2d::thread_tmp_s_fu_806_p3() {
    tmp_s_fu_806_p3 = esl_concat<2,6>(channel_2_reg_336.read(), ap_const_lv6_0);
}

void conv2d::thread_trunc_ln32_1_fu_535_p1() {
    trunc_ln32_1_fu_535_p1 = add_ln32_1_fu_526_p2.read().range(6-1, 0);
}

void conv2d::thread_trunc_ln32_fu_531_p1() {
    trunc_ln32_fu_531_p1 = add_ln32_1_fu_526_p2.read().range(8-1, 0);
}

void conv2d::thread_trunc_ln44_1_fu_689_p1() {
    trunc_ln44_1_fu_689_p1 = col_1_reg_279.read().range(15-1, 0);
}

void conv2d::thread_trunc_ln44_fu_648_p1() {
    trunc_ln44_fu_648_p1 = row_1_reg_268.read().range(9-1, 0);
}

void conv2d::thread_trunc_ln67_1_fu_897_p1() {
    trunc_ln67_1_fu_897_p1 = add_ln67_3_fu_892_p2.read().range(8-1, 0);
}

void conv2d::thread_trunc_ln67_2_fu_901_p1() {
    trunc_ln67_2_fu_901_p1 = add_ln67_3_fu_892_p2.read().range(6-1, 0);
}

void conv2d::thread_trunc_ln67_3_fu_935_p1() {
    trunc_ln67_3_fu_935_p1 = col_2_reg_324.read().range(15-1, 0);
}

void conv2d::thread_trunc_ln67_fu_865_p1() {
    trunc_ln67_fu_865_p1 = row_2_reg_312.read().range(9-1, 0);
}

void conv2d::thread_zext_ln27_fu_421_p1() {
    zext_ln27_fu_421_p1 = esl_zext<32,31>(count_0_reg_202.read());
}

void conv2d::thread_zext_ln32_1_fu_448_p1() {
    zext_ln32_1_fu_448_p1 = esl_zext<34,33>(tmp_2_fu_440_p3.read());
}

void conv2d::thread_zext_ln32_2_fu_522_p1() {
    zext_ln32_2_fu_522_p1 = esl_zext<64,2>(row_0_reg_224.read());
}

void conv2d::thread_zext_ln32_3_fu_479_p1() {
    zext_ln32_3_fu_479_p1 = esl_zext<35,2>(channel_0_reg_213.read());
}

void conv2d::thread_zext_ln32_4_fu_574_p1() {
    zext_ln32_4_fu_574_p1 = esl_zext<8,2>(col_0_reg_235.read());
}

void conv2d::thread_zext_ln32_5_fu_583_p1() {
    zext_ln32_5_fu_583_p1 = esl_zext<64,8>(add_ln32_2_fu_578_p2.read());
}

void conv2d::thread_zext_ln32_fu_436_p1() {
    zext_ln32_fu_436_p1 = esl_zext<34,31>(count_0_reg_202.read());
}

void conv2d::thread_zext_ln39_fu_593_p1() {
    zext_ln39_fu_593_p1 = esl_zext<32,31>(count_1_reg_246.read());
}

void conv2d::thread_zext_ln41_fu_633_p1() {
    zext_ln41_fu_633_p1 = esl_zext<32,31>(row_1_reg_268.read());
}

void conv2d::thread_zext_ln44_1_fu_698_p1() {
    zext_ln44_1_fu_698_p1 = esl_zext<64,15>(add_ln44_1_fu_693_p2.read());
}

void conv2d::thread_zext_ln44_fu_652_p1() {
    zext_ln44_fu_652_p1 = esl_zext<9,8>(tmp_5_reg_1073.read());
}

void conv2d::thread_zext_ln56_fu_708_p1() {
    zext_ln56_fu_708_p1 = esl_zext<32,31>(input_count_0_reg_290.read());
}

void conv2d::thread_zext_ln57_fu_723_p1() {
    zext_ln57_fu_723_p1 = esl_zext<32,31>(filter_count_0_reg_301.read());
}

void conv2d::thread_zext_ln60_fu_764_p1() {
    zext_ln60_fu_764_p1 = esl_zext<32,31>(row_2_reg_312.read());
}

void conv2d::thread_zext_ln67_1_fu_750_p1() {
    zext_ln67_1_fu_750_p1 = esl_zext<34,33>(tmp_9_fu_742_p3.read());
}

void conv2d::thread_zext_ln67_2_fu_888_p1() {
    zext_ln67_2_fu_888_p1 = esl_zext<64,2>(m_0_reg_361.read());
}

void conv2d::thread_zext_ln67_3_fu_802_p1() {
    zext_ln67_3_fu_802_p1 = esl_zext<35,2>(channel_2_reg_336.read());
}

void conv2d::thread_zext_ln67_4_fu_814_p1() {
    zext_ln67_4_fu_814_p1 = esl_zext<9,8>(tmp_s_fu_806_p3.read());
}

void conv2d::thread_zext_ln67_5_fu_861_p1() {
    zext_ln67_5_fu_861_p1 = esl_zext<9,2>(m_0_reg_361.read());
}

void conv2d::thread_zext_ln67_6_fu_931_p1() {
    zext_ln67_6_fu_931_p1 = esl_zext<15,2>(n_0_reg_384.read());
}

void conv2d::thread_zext_ln67_7_fu_950_p1() {
    zext_ln67_7_fu_950_p1 = esl_zext<64,15>(add_ln67_5_fu_945_p2.read());
}

void conv2d::thread_zext_ln67_8_fu_955_p1() {
    zext_ln67_8_fu_955_p1 = esl_zext<8,2>(n_0_reg_384.read());
}

void conv2d::thread_zext_ln67_9_fu_964_p1() {
    zext_ln67_9_fu_964_p1 = esl_zext<64,8>(add_ln67_6_fu_959_p2.read());
}

void conv2d::thread_zext_ln67_fu_738_p1() {
    zext_ln67_fu_738_p1 = esl_zext<34,31>(filter_count_0_reg_301.read());
}

void conv2d::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_425_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_fu_467_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln29_fu_510_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, stream_filter_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read())) && (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_nbreadreq_fu_118_p4.read()) || 
  esl_seteq<1,1,1>(icmp_ln30_fu_553_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_553_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_118_p4.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, stream_filter_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op104_read_state5.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_597_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln40_fu_613_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_fu_637_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, stream_input_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read())) && (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_nbreadreq_fu_136_p4.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln42_fu_669_p2.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_669_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_nbreadreq_fu_136_p4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, stream_input_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op148_read_state9.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(regslice_both_stream_output_V_data_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_fu_712_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(regslice_both_stream_output_V_data_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_fu_712_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln57_fu_727_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_fu_768_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln61_fu_779_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_block_state14_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_790_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_fu_790_p2.read()) && esl_seteq<1,1,1>(ap_block_state14_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_849_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln66_fu_919_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(stream_output_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<31>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void conv2d::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_filter_TDATA\" :  \"" << stream_filter_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_filter_TVALID\" :  \"" << stream_filter_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"stream_filter_TREADY\" :  \"" << stream_filter_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_filter_TLAST\" :  \"" << stream_filter_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_input_TDATA\" :  \"" << stream_input_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_input_TVALID\" :  \"" << stream_input_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_input_TREADY\" :  \"" << stream_input_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_input_TLAST\" :  \"" << stream_input_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_output_TDATA\" :  \"" << stream_output_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_output_TVALID\" :  \"" << stream_output_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_output_TREADY\" :  \"" << stream_output_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_output_TLAST\" :  \"" << stream_output_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

